\input texinfo
@documentencoding utf-8

@ifnottex
@paragraphindent 0
@end ifnottex
@titlepage
@title Allegro changelog for 5.0.x series
@end titlepage

@contents

@node Top
@top Allegro changelog for 5.0.x series

See @code{changes._tx} for changes in earlier versions of Allegro. These lists serve as summaries; the full histories are in the Subversion repository.
@menu
* Changes from 506 to 507 June 2012::
* Changes from 505 to 506 March 2012::
* Changes from 504 to 505 November 2011::
* Changes from 503 to 504 August 2011::
* Changes from 5021 to 503 May 2011::
* Changes from 502 to 5021 April 2011::
* Changes from 501 to 502 April 2011::
* Changes from 500 to 501 March 2011::
* Changes from 500 RC5 to 500 February 2011::
* Changes from 500 RC4 to 500 RC5 February 2011::
* Changes from 500 RC3 to 500 RC4 December 2010::
* Changes from 500 RC2 to 500 RC3 December 2010::
* Changes from 500 RC1 to 500 RC2 December 2010::
* Changes from 4922 to 500 RC1 November 2010::
* Changes from 4921 to 4922 September 2010::
* Changes from 4920 to 4921 July 2010::
* Changes from 4919 to 4920 May 2010::
* Changes from 4918 to 4919 April 2010::
* Changes from 4917 to 4918 March 2010::
* Changes from 4916 to 4917 February 2010::
* Changes from 49151 to 4916 November 2009::
* Changes from 4915 to 49151 October 2009::
* Changes from 4914 to 4915 October 2009::
* Changes from 4913 to 4914 September 2009::
* Changes from 4912 to 4913 August 2009::
* Changes from 4911 to 4912 July 2009::
* Changes from 49101 to 4911 June 2009::
* Changes from 4910 to 49101 May 2009::
* Changes from 4991 to 4910 May 2009::
* Changes from 499 to 4991 March 2009::
* Changes from 498 to 499 March 2009::
* Changes from 4971 to 498 February 2009::
* Changes from 497 to 4971 December 2008::
* Changes from 496 to 497 December 2008::
* Changes from 495 to 496 November 2008::
* Changes from 494 to 495 October 2008::
* Changes from 493 to 494 September 2008::
* Changes from 492 to 493 April 2008::
* Changes from 491 to 492 November 2007::
* Changes from 490 to 491 March 2007::
* Changes from 42 series to 490 July 2006::
@end menu

@node Changes from 506 to 507 June 2012
@chapter Changes from 5.0.6 to 5.0.7 (June 2012)
The main developers this time were: Trent Gamblin@comma{} Elias Pschernig@comma{} Peter Wang.

Core:

@itemize
@item
Fix ALLEGRO_STATIC_ASSERT collisions from different files included in the same translation unit. Reported by tobing.

@item
Make al_ref_cstr@comma{} al_ref_ustr and al_ref_buffer return const ALLEGRO_USTR* instead of just an ALLEGRO_USTR* (Paul Suntsov).

@item
Make al_ustr_empty_string const correct.

@item
Fix many memory leak/warnings on MacOS X (Pär Arvidsson).

@item
Fix typo preventing get_executable_name from using System V procfs correctly. Reported by Max Savenkov.

@end itemize

Displays:

@itemize
@item
Add ALLEGRO_FRAMELESS as a preferred synonym for the confusing ALLEGRO_NOFRAME flag.

@item
Rename al_toggle_display_flag to al_set_display_flag@comma{} retaining the older name for compatibility.

@item
Set WM_NAME for some window managers (X11).

@end itemize

Graphics:

@itemize
@item
Force al_create_bitmap to not create oversized bitmaps@comma{} to mitigate integer overflow problems.

@item
Removed initial black frame on all Allegro programs.

@end itemize

OpenGL:

@itemize
@item
Texture should be 'complete' (min/mag and wrap set) before glTexImage2D.

@item
Fixed a bug in al_unlock_bitmap where the pixel alignment mistakenly was used as row length.

@item
Fixed typo in names of some OpenGL extension functions.

@item
Display list of OpenGL extensions in allegro.log also for OpenGL 3.0.

@end itemize

Direct3D:

@itemize
@item
Fixed a bug in the D3D driver where separate alpha blending was being tested for when it shouldn't have been (Max Savenkov).
@end itemize

Input:

@itemize
@item
Monitor /dev/input instead of /dev on Linux for hotplugging joysticks (Jon Rafkind).

@item
Do not permanently change the locale for the X11 keyboard driver. Set LC_CTYPE only@comma{} not LC_ALL.

@end itemize

Audio addon:

@itemize
@item
Fix desychronization due to inaccurate sample positions when resampling. Thanks to _Bnu for discovering the issue and Paul Suntsov for devising the correct solution.

@item
Fix linear interpolation across audio stream buffer fragments.

@item
Fix two minor memory leaks in the PulseAudio driver.

@end itemize

Image I/O addon:

@itemize
@item
Improve compatibility of BMP loader. In particular@comma{} support bitmaps with V2-V5 headers and certain alpha bit masks.

@item
Fix TGA loader using more memory than necessary. Reported by Max Savenkov.

@end itemize

Font addon:

@itemize
@item
Use user set pixel format for fonts.
@end itemize

Native dialogs addon:

@itemize
@item
Clear mouse state after dialogs or else it gets messed up (OSX).

@item
Fix some warnings in gtk_dialog.c.

@item
Wrap use of NSAlert so it can be run on the main thread with return value.

@end itemize

Examples:

@itemize
@item
Add ex_resample_test.

@item
ex_audio_props: Add bidir button.

@item
ex_joystick_events: Support hotplugging and fix display of 3-axis sticks.

@item
Add test_driver --no-display flag. (Tobias Hansen)

@end itemize

Other:

@itemize
@item
Various documentation updates.

@item
Other minor bug fixes.

@item
Fix whatis entries of man pages. (Tobias Hansen)

@end itemize

@node Changes from 505 to 506 March 2012
@chapter Changes from 5.0.5 to 5.0.6 (March 2012)
The main developers this time were: Trent Gamblin@comma{} Matthew Leverton@comma{} Elias Pschernig@comma{} Paul Suntsov@comma{} Peter Wang.

Core:

@itemize
@item
Added al_register_assert_handler.
@end itemize

Graphics:

@itemize
@item
Added al_draw_tinted_scaled_rotated_bitmap_region.

@item
Added al_reset_clipping_rectangle convenience function.

@item
Added al_get_parent_bitmap.

@item
Fixed a bug in the OpenGL driver when drawing the backbuffer outside the clipping rectangle of the target bitmap.

@item
Make blitting from backbuffer work when using multisampling on Windows/D3D.

@end itemize

Displays:

@itemize
@item
Set ALLEGRO_MINIMIZED display flag on Windows (Zac Evans).

@item
Don't generate bogus resize events after restoring minimised window on Windows.

@item
Fixed bug on Windows where two SWITCH_IN events were fired when window was minimized/restored (Michael Swiger).

@item
Fixed inverted al_toggle_display_flag(ALLEGRO_NOFRAME) logic under Windows as well as a bug where repeatedly setting the flag to on would make the window grow bigger and bigger (Michael Swiger).

@item
Fixed inverted al_toggle_display_flag(ALLEGRO_NOFRAME) logic in X11.

@item
Prevent a deadlock during display creation on X.

@item
Fallback to the 'old' visual selection method on X instead of crashing if the 'new' visual selection doesn't work.

@end itemize

Input:

@itemize
@item
Use the same logic in set_mouse_xy for FULLSCREEN_WINDOW as was used for FULLSCREEN. (Max OS X)
@end itemize

Filesystem:

@itemize
@item
Added al_fopen_slice.

@item
Added al_set_exe_name which allows overriding Allegro's idea of the path to the current executable.

@item
Make al_get_standard_path(ALLEGRO_TEMP_PATH) treat the value of TMPDIR et al. as a directory name even without a trailing slash. (Unix)

@item
Make stdio al_fopen implementation set proper errno on failure.

@end itemize

Audio addons:

@itemize
@item
Add mixer gain property and functions.

@item
Improve code to check that DLL symbols are loaded in the acodec addon. The old method was hacky and broke under -O2 using GCC 4.6.1.

@end itemize

Image I/O addon:

@itemize
@item
Improved accuracy of un-alpha-premultiplying in the native OSX bitmap loader.
@end itemize

Primitives addon:

@itemize
@item
Added al_draw_filled_pieslice and al_draw_pieslice.

@item
Added al_draw_elliptical_arc.

@end itemize

TTF addon:

@itemize
@item
Added al_load_ttf_font_stretch functions (tobing).

@item
Added ALLEGRO_TTF_NO_AUTOHINT font loading flag to disable the Auto Hinter which is enabled by default in newer version of FreeType (Michał Cichoń).

@item
Clear locked region so pixel borders aren't random garbage that can be seen sometimes with linear filtering on.

@item
Unlock glyph cache page at end of text_length and get_text_dimensions (jmasterx).

@end itemize

Examples:

@itemize
@item
Added new examples: ex_audio_chain@comma{} ex_display_events@comma{} ex_file_slice.

@item
ex_ogre3d: Make it work under Windows (AMCerasoli).

@item
a5teroids: Support gamepads that report small non-zero values for sticks that are at rest.

@end itemize

Other:

@itemize
@item
Added index to HTML version of the reference manual (Jon Rafkind).

@item
Various documentation updates.

@item
Other minor bug fixes.

@end itemize

@node Changes from 504 to 505 November 2011
@chapter Changes from 5.0.4 to 5.0.5 (November 2011)
The main developers this time were: Elias Pschernig and Trent Gamblin.

Graphics:

@itemize
@item
Fixed several instances of windows being positioned wrong on Windows: regular windows@comma{} WGL FULLSCREEN_WINDOW@comma{} and ALLEGRO_NOFRAME windows.

@item
Don't re-bind the FBO in al_set_target_bitmap if the new target bitmap shares the parent bitmap with the new target bitmap (Paul Suntsov).

@item
Zero out fake refresh rate information from the nvidia proprietary driver on X11 (Peter Wang).

@item
Implemented the ALLEGRO_FULLSCREEN_WINDOW flag for iOS.

@end itemize

Input:

@itemize
@item
Make al_set_mouse_xy work in fullscreen on Windows.

@item
Fixed a race condition in al_init_joystick.

@item
Fixed problem on OS X where having two identical gamepads attached would cause joystick initialization to hang (Thanks to Todd Cope for pointing it out.)

@item
Fixed iphone joystick events (it assumed a call to al_get_joystick but that's not required when using events).

@end itemize

TTF fonts:

@itemize
@item
Save new bitmap flags and bitmap format at time of loading font and use them when creating pages.
@end itemize

Primitives addon:

@itemize
@item
Very thin arcs/pieslices were not drawn due to an overzealous check (Paul Suntsov).
@end itemize

Native dialogs addon:

@itemize
@item
Implemented al_show_native_message_box for iOS.
@end itemize

Other:

@itemize
@item
Use .../Library/Application Support for ALLEGRO_USER_SETTINGS_PATH and ALLEGRO_USER_DATA_PATH on iOS.

@item
Listen for applicationDidBecomeActive and applicationWillResignActive instead of applicationWillEnterForeground and applicationDidEnterBackground on iOS. This makes all of the common situations where you want to pause your game work@comma{} such as the lock button.

@item
Fix some memory leaks on iOS.

@end itemize

Documentation:

@itemize
@item
Various documentation updates.

@item
Generate multiple copies of a man page for all the API entries that it documents.

@end itemize

@node Changes from 503 to 504 August 2011
@chapter Changes from 5.0.3 to 5.0.4 (August 2011)
The main developers this time were: Trent Gamblin@comma{} Matthew Leverton@comma{} Elias Pschernig@comma{} Jon Rafkind@comma{} Paul Suntsov@comma{} Peter Wang and torhu.

Core:

@itemize
@item
Restore searching of directories on PATH for DLLs to load on Windows.

@item
Fix crash on shutdown in headless Unix environment (no X11 display).

@item
Change all instances of al_malloc + memset(0) to al_calloc.

@end itemize

Graphics:

@itemize
@item
Save memory in OpenGL case by freeing bitmap memory after uploading a texture. Use a temporary buffer when converting lock buffer back to native texture format.

@item
Don't release or refresh memory or sub-bitmaps when D3D device gets lost/found.

@item
Do not set D3D sub bitmaps to modified when first creating them. This can cause major slowdowns when creating a lot of sub-bitmaps and is likely responsible for slow font performance/startup when using D3D.

@item
Fix incorrect number of display formats in D3D (tobing).

@item
Honor ALLEGRO_VSYNC in the WGL driver.

@item
Make titlebar icons the right size on Windows.

@item
Fix typo causing weird results of al_get_monitor_info on X.

@item
Don't setup FBO for a sub-bitmap whose parent is locked.

@item
Specialise ADD/ONE/INVERSE_ALPHA blend mode software scanline drawers.

@item
Toggle ALLEGRO_VIDEO_BITMAP flag off when creating a memory bitmap (both bits were previously on).

@item
Add null bitmap assertion to al_clone_bitmap.

@end itemize

Input:

@itemize
@item
New system for mapping extended keys in Windows keyboard driver. Mainly for getting the same keycode for numpad keys independently of the state of Num Lock.

@item
More reliable updating of the toggle modifiers in Windows keyboard driver (Num Lock@comma{} Caps Lock@comma{} and Scroll Lock).

@end itemize

Timers:

@itemize
@item
Fix race conditions when starting timers from different threads.
@end itemize

Audio addons:

@itemize
@item
Don't mix into a global temporary sample buffer@comma{} causing noise when two separate mixers are trying to run in parallel.

@item
Make it possible to start/stop an audio stream which is attached to a voice.

@item
ALSA voices could not be resumed after being stopped@comma{} because the update threads quit as soon as a voice is stopped.

@item
OpenAL backend did not handle the case where _al_voice_update returns less than a full buffer.

@item
Attempt to load FLAC and Vorbis DLLs only once to avoid Windows popping up too many error windows.

@end itemize

Native dialogs addon:

@itemize
@item
al_show_native_messagebox() on Windows: add UTF-8 support; show heading; show information icon by default.
@end itemize

TTF addon:

@itemize
@item
Reduce memory usage.

@item
Don't make multiple passes over strings when computing text dimensions.

@end itemize

Build system:

@itemize
@item
Make sure static builds on Windows never use DLL_TLS (Zac Evans).

@item
Made compilation possible with different combinations of Xinerama@comma{} XF86VidMode@comma{} or Randr being present.

@item
cmake: Use find_path HINTS instead of PATHS in our DirectX SDK scripts.

@item
cmake: Search for D3DX9 once instead of multiple times (John-Kim Murphy).

@item
cmake: Find FLAC/Ogg/Vorbis libraries under the names generated by the official MSVC project files.

@item
Include zlib.h explicitly for libpng 1.5.

@end itemize

Examples:

@itemize
@item
Add multisampling to SPEED example. Change examples to use ALLEGRO_SUGGEST for multisampling.

@item
Include the font for speed.app under OSX within the bundle so it can be run by double clicking.

@item
Use default blending/pre-multiplied alpha in ex_blend2.

@end itemize

Other:

@itemize
@item
Various documentation updates.

@item
Fix minor memory leaks.

@end itemize

Bindings:

@itemize
@item
Better way to make the Python wrapper work with both Python 2 and 3.

@item
Include Windows-specific functions in the Python wrapper.

@end itemize

@node Changes from 5021 to 503 May 2011
@chapter Changes from 5.0.2.1 to 5.0.3 (May 2011)
Input:

@itemize
@item
Fixed keyboard repeat for extended keys on Windows. Added ALLEGRO_KEY_MENU. (torhu)

@item
Make Delete key in Windows send KEY_CHAR event with unichar code 127 (Peter Wang).

@end itemize

Filesystem:

@itemize
@item
al_remove_filename returned false even if successful (reported by xpolife).
@end itemize

Graphics:

@itemize
@item
On OpenGL ES 1.1@comma{} glReadPixels can only read 4 byte pixels (Trent Gamblin).
@end itemize

Font addon:

@itemize
@item
Fix a small memory leak when unregistering a handler with al_register_font_loader (Trent Gamblin).
@end itemize

Primitives addon:

@itemize
@item
Fix assertion failures when drawing al_draw_ellipse@comma{} al_draw_arc@comma{} al_draw_rounded_rectangle@comma{} al_draw_filled_rounded_rectangle at very small scales (reported by Carl Olsson).
@end itemize

Native dialogs addon:

@itemize
@item
gtk: Fix truncated string if the final button contained a non-ASCII character (Peter Wang).
@end itemize

Other:

@itemize
@item
Minor build fixes and documentation updates.
@end itemize

@node Changes from 502 to 5021 April 2011
@chapter Changes from 5.0.2 to 5.0.2.1 (April 2011)
@itemize
@item
Fix regression on Windows where the keyboard state was not updated unless the keyboard event source is registered to an event queue.
@end itemize

@node Changes from 501 to 502 April 2011
@chapter Changes from 5.0.1 to 5.0.2 (April 2011)
Input:

@itemize
@item
Fix inverted mouse wheel on X11.

@item
Make unicode field in KEY_CHAR events zero for Fn@comma{} arrow keys@comma{} etc. for OS X (jmasterx@comma{} Peter Hull).

@item
Support ALLEGRO_KEY_PAD_ENTER and detect left/right Alt and Ctrl keys independently on Windows (torhu@comma{} Matthew Leverton).

@end itemize

@node Changes from 500 to 501 March 2011
@chapter Changes from 5.0.0 to 5.0.1 (March 2011)
The main developers this time were: Trent Gamblin@comma{} Elias Pschernig@comma{} Peter Wang. Other contributions noted in-line.

Graphics:

@itemize
@item
Automatically destroy framebuffer objects (FBOs) created for non-memory bitmaps after a while. This solves the problem of running out of resources if you set many different target bitmaps.

@item
Make al_get_opengl_fbo attempt to create an FBO if one doesn't exist.

@item
Avoid very small textures in Direct3D.

@item
Do not sync from memory when first creating/uploading a bitmap (D3D).

@item
Try to fix the problem of the taskbar appearing above fullscreen windows on Windows.

@item
Center the window after toggling fullscreen on Windows.

@end itemize

Input:

@itemize
@item
Support 4-way mouse-wheel and up to 32 mouse buttons in X11.
@end itemize

Audio addons:

@itemize
@item
Avoid buffer overrun while reading from vorbis files.

@item
Added optional support for Tremor in place of libvorbis on any platform.

@item
Do not prefer DirectSound with OpenAL. This can cause problems and also will override user config.

@item
Play silence where needed in DirectSound driver.

@end itemize

TTF addon:

@itemize
@item
Do not hold bitmap drawing when changing target bitmap@comma{} which is invalid and caused transformations to be misapplied.

@item
Remove FBO for a cache bitmap once we are no longer adding glyphs to it.

@end itemize

Build system:

@itemize
@item
Force "default" visibility of _al_mangled_main on OS X@comma{} otherwise the dynamic linker cannot find the symbol if building with XCode4 (Owen Anderson and Peter Hull).

@item
Generated pkg-config files should take into account LIB_SUFFIX variable (Cristian Morales Vega).

@item
Update allegro_font pkg-config file to not require allegro_primitives.

@end itemize

Documentation:

@itemize
@item
Various documentation updates.

@item
Add copy of DejaVu font licence.

@end itemize

Bindings:

@itemize
@item
Add allegro_main addon to the Python wrapper. Make the wrapper work with Python 3@comma{} which has a different string representation. Add parameter type checking for custom types.
@end itemize

@node Changes from 500 RC5 to 500 February 2011
@chapter Changes from 5.0.0 RC5 to 5.0.0 (February 2011)
Color addon:

@itemize
@item
Use colour names from CSS. This is the same as the previous list but with all grey/gray alternatives.
@end itemize

Documentation:

@itemize
@item
Minor documentation updates.
@end itemize

@node Changes from 500 RC4 to 500 RC5 February 2011
@chapter Changes from 5.0.0 RC4 to 5.0.0 RC5 (February 2011)
The main developers this time were: Thomas Fjellstrom@comma{} Trent Gamblin@comma{} Peter Hull@comma{} Matthew Leverton and Peter Wang. Other contributions noted in-line.

System:

@itemize
@item
Load allegro5.cfg from the directory containing the executable@comma{} not the initial working directory.
@end itemize

Graphics:

@itemize
@item
Make al_get_monitor_info return success code.

@item
Replace al_set_new_display_adaptor(-1) with a named constant ALLEGRO_DEFAULT_DISPLAY_ADAPTER.

@item
Fix numerous bugs in X mode setting and multi monitor related code@comma{} and introduce new xrandr code.

@item
Generate ALLEGRO_EVENT_MOUSE_LEAVE_DISPLAY when mouse leaves OS X window (Evert Glebbeek).

@item
Hide OS X window during exiting fullscreen window mode@comma{} to prevent the hideous misaligned animation from showing.

@item
Fix erroneous assertions in OpenGL backend.

@item
Added a hack which makes OpenGL mode work under Wine for me (Elias Pschernig).

@item
Add support for some al_get_display_options in D3D port.

@end itemize

Keyboard:

@itemize
@item
Don't send KEY_CHAR events for modifier and dead keys (with contributions from torhu).

@item
Don't send KEY_DOWN events for non-physical key events.

@item
osx: Allow unicode entry (single keypresses only).

@item
x11: Set the keycode field in KEY_CHAR events to the code of the last key pressed@comma{} as stated in the documentation@comma{} even if the char is due to a compose sequence.

@item
x11: Get rid of historic behaviour where the unicode field is always zero when Alt is held down.

@item
Rename ALLEGRO_KEY_EQUALS_PAD to ALLEGRO_KEY_PAD_EQUALS for consistency.

@end itemize

Mouse:

@itemize
@item
Add al_grab_mouse and al_ungrab_mouse. Implemented on X11 and Windows.

@item
Allow the user configure a key binding to toggle mouse grabbing on a window.

@item
Support horizontal mouse wheel on Windows (jmasterx).

@item
Calculate Y position for al_set_mouse_xy correctly in OS X windowed mode (X-G).

@item
Use more appropriate CURSOR_LINK cursor on OS X (X-G).

@item
Assign different button IDs for separate touches on iPhone (Michał Cichoń).

@item
iphone: Remove fake mouse move events as they're unncessary and can cause problems with user input tracking.

@end itemize

Filesystem:

@itemize
@item
Clean up al_get_standard_path(): remove SYSTEM_DATA@comma{} SYSTEM_SETTINGS@comma{} PROGRAM paths; add RESOURCES and USER_DOCUMENTS paths. Use system API calls if possible.

@item
Implement ALLEGRO_USER_DATA_PATH under Linux. Honor XDG_DATA/CONFIG_HOME environment variables.

@item
Fix al_make_directory on Windows due to problems with calls to stat() with trailing slashes.

@end itemize

Native dialogs addon:

@itemize
@item
Use string arguments to al_create_native_file_dialog() and al_get_native_file_dialog_path() instead of ALLEGRO_PATH.

@item
Enhance the Windows file selector (initial patch by Todd Cope):

@itemize
@item
Use Windows' folder selector for ALLEGRO_FILECHOOSER_FOLDER.

@item
Implement patterns.

@item
Display the title of the dialog that the user specified.

@end itemize

@end itemize

Primitives addon:

@itemize
@item
Fix changing the D3D blender state without updating the cached state.
@end itemize

TTF addon:

@itemize
@item
Align glyphs in ttf font sheets so as to work around problems with forced S3TC compression with some OpenGL drivers (Elias Pschernig).
@end itemize

Examples:

@itemize
@item
SPEED: add full screen flag@comma{} use standard paths for highscores and data.
@end itemize

Build system:

@itemize
@item
Check PulseAudio backend will compile before enabling support.

@item
Give a louder warning if FLAC/Vorbis/DUMB compile tests fail.

@end itemize

Other:

@itemize
@item
Many leaks fixed on OS X.

@item
Minor bug fixes and documentation updates.

@end itemize

@node Changes from 500 RC3 to 500 RC4 December 2010
@chapter Changes from 5.0.0 RC3 to 5.0.0 RC4 (December 2010)
The main developers this time were: Trent Gamblin@comma{} Matthew Leverton@comma{} Elias Pschernig@comma{} Peter Wang.

Graphics:

@itemize
@item
d3d: Don't generate intermediate resize events during modal resize loop.

@item
Optimize D3D9 driver by caching blender state and scissor rectangle so redundant calls to D3D9 functions are avoided (Michał Cichoń).

@item
gl: Use glGenerateMipmapEXT to generate mipmaps when FBOs are used.

@item
x11: Don't restore display mode if another fullscreen display is active.

@end itemize

Input:

@itemize
@item
iphone: Reverse button/axis events that were swapped at some point.
@end itemize

File I/O:

@itemize
@item
Change the way user code implements new ALLEGRO_FILE structures. This adds al_create_file_handle and al_get_file_userdata.

@item
Implement default ungetc behavior - used if the interface does not supply its own.

@item
Add al_fopen_interface.

@end itemize

Memfile addon:

@itemize
@item
Implement ungetc.

@item
Add rw file modes.

@item
Rename header to allegro_memfile.h.

@item
Add documentation.

@end itemize

Image I/O addon:

@itemize
@item
Fix endian issues in TGA and Mac OS X image loaders.
@end itemize

Other:

@itemize
@item
Use _NSGetExecutablePath for al_get_standard_path(ALLEGRO_EXENAME_PATH) on OS X (Jeff Connelly).

@item
Minor bug fixes and documentation updates.

@end itemize

@node Changes from 500 RC2 to 500 RC3 December 2010
@chapter Changes from 5.0.0 RC2 to 5.0.0 RC3 (December 2010)
The main developers this time were: Michał Cichoń@comma{} Trent Gamblin@comma{} Peter Wang.

Graphics:

@itemize
@item
Honour subbitmap clipping rectangle under OpenGL (Elias Pschernig).

@item
Fix an error in the Direct3D primitives blending.

@item
al_set_new_window_position() did not have an effect for resizable windows on X11.

@item
Fix windows only showing up on first monitor on X11 (Thomas Fjellstrom).

@item
Implement al_get_monitor_info() for iDevices.

@end itemize

Input:

@itemize
@item
Separate character inputs from physical key down events. This removes unichar and modifiers fields from ALLEGRO_EVENT_KEY_DOWN@comma{} and replaces ALLEGRO_EVENT_KEY_REPEAT by ALLEGRO_EVENT_KEY_CHAR. We decided this design flaw was better fixed now than later.

@item
Make Mac OS X keyboard driver properly distinguish key down and key repeat events.

@end itemize

TTF addon:

@itemize
@item
Respect ALLEGRO_NO_PREMULTIPLIED_ALPHA flag when loading TTF fonts.
@end itemize

Other:

@itemize
@item
Fix returning a garbage pointer in maybe_load_library_at_cwd (Vadik Mironov).

@item
Remove dependency on dxguid.

@item
Minor compilation fixes and documentation updates.

@end itemize

@node Changes from 500 RC1 to 500 RC2 December 2010
@chapter Changes from 5.0.0 RC1 to 5.0.0 RC2 (December 2010)
The developers this time were: Trent Gamblin@comma{} Elias Pschernig and Peter Wang.

System:

@itemize
@item
Add al_is_system_installed and hide al_get_system_driver.

@item
Prevent 'DLL hijacking' security issue on Windows.

@end itemize

Graphics:

@itemize
@item
Change to using premultiplied alpha by default. The new bitmap flag ALLEGRO_NO_PREMULTIPLIED_ALPHA was added.

@item
Change the value of ALLEGRO_VIDEO_BITMAP to non-zero.

@item
Change al_get_opengl_version to return a packed integer.

@item
Made al_get_opengl_version return an OpenGL ES version (if using OpenGL ES) rather than an attempted estimate at a desktop GL version.

@item
Added function al_get_opengl_variant that returns either ALLEGRO_DESKTOP_OPENGL or ALLEGRO_OPENGL_ES.

@item
Make al_have_opengl_extension return bool.

@item
Fix OpenGL graphics mode height value on Windows.

@item
Only try to create one Direct3D display at a time.

@item
Make screensaver activate on Windows Vista and above unless inhibited.

@item
Avoid potential divide-by-zeroes when computing the refresh rate in X11 video modes.

@end itemize

Events:

@itemize
@item
Delete an incorrect mutex destroy in al_unregister_event_source.
@end itemize

Input:

@itemize
@item
Revert the joystick driver used on OS X 10.4 to the pre-hotplugging version@comma{} rather than one which contained an earlier attempt at implementing hotplugging. Select the 10.4 or greater joystick driver at runtime.
@end itemize

iPhone:

@itemize
@item
Added two iPhone-specific functions: al_iphone_override_screen_scale and al_iphone_program_has_halted.
@end itemize

Image I/O addon:

@itemize
@item
Made the iPhone and OSX image loaders not try and correct colors to some arbitrary color space@comma{} but instead use the values directly from the image.
@end itemize

Native dialogs addon:

@itemize
@item
Tolerate null display in al_show_native_file_dialog on Windows.

@item
Make GTK native dialog implementation only call GTK from a single thread.

@item
Define al_show_native_message_box to be usable without installing Allegro.

@end itemize

Primitives addon:

@itemize
@item
Make primitives addon compilable again without OpenGL.
@end itemize

Examples:

@itemize
@item
ex_ttf: Test the monochrome flag.

@item
Work around problems with MSVC and UTF-8 string literals. ex_utf8 is now not built under MSVC.

@item
Don't use WIN32 executable type on examples that require the console (David Capello).

@end itemize

Other:

@itemize
@item
Minor bug fixes and documentation updates.
@end itemize

@node Changes from 4922 to 500 RC1 November 2010
@chapter Changes from 4.9.22 to 5.0.0 RC1 (November 2010)
The developers this time were: Trent Gamblin@comma{} Evert Glebbeek@comma{} Elias Pschernig@comma{} Paul Suntsov@comma{} Peter Wang.

Graphics:

@itemize
@item
Make al_resize_display keep the original resolution (or change back) if it can't set the users request@comma{} on Windows.

@item
Do not emit ALLEGRO_DISPLAY_RESIZE events from the Windows and X11 display drivers when using al_resize_display.

@item
[X11] Make al_get_num_display_modes and al_get_display_mode work if the adapter is set to default. Right now there was no way to query the modes of the default monitor.

@item
[X11] Use _NET_WM_STATE_FULLSCREEN hint for "true" fullscreen displays. Enable mouse grabbing in fullscreen modes.

@item
Added ALLEGRO_EVENT_DISPLAY_ORIENTATION and implement it on iOS.

@item
Dennis Busch fixed a problem with displays not showing up on the primary display by default in some dual head setups@comma{} on Windows.

@item
Increase the precision of texture coordinate deltas in the software triangle renderer@comma{} from floats to doubles.

@item
Remove al_get_frontbuffer(). It wasn't implemented anywhere.

@item
Implement min/mag filter and mipmap flags for Direct3D.

@end itemize

Input:

@itemize
@item
Report correct initial mouse position if a display is created with the mouse pointer inside@comma{} or if the mouse routines are installed after a display is created (X11@comma{} Windows).

@item
John Murphy fixed improperly mapped axes on the Windows joystick driver.

@end itemize

Events:

@itemize
@item
Do not register user event sources with the destructor system as it cannot work reliably. User event sources must be destroyed manually.
@end itemize

Filesystem:

@itemize
@item
Make al_get_fs_entry_name and al_get_current_directory return strings instead of ALLEGRO_PATH.

@item
Make al_make_directory create parent directories as needed.

@item
Fix al_create_fs_entry to not trim the root path "/" down to the empty string with the stdio backend.

@end itemize

Path routines:

@itemize
@item
Remove al_make_path_absolute and replace it by al_rebase_path.

@item
Remove undocumented behavior of setting a default organization name of "allegro" for all apps.

@item
Correctly return standard paths as directories on OS X.

@end itemize

Threads:

@itemize
@item
Rename al_wait_cond_timed to al_wait_cond_until to match al_wait_cond_until.
@end itemize

Config routines:

@itemize
@item
Add a blank line between sections when writing out a config file.
@end itemize

Other core:

@itemize
@item
Move the Windows event loops back into the same thread as the D3D event loop. It's a requirement of D3D@comma{} else you can get crashes as I was when resetting the device (like tabbing away from a fullscreen app).

@item
Add some missing standard entries to the OS X menu bar (the "hide"@comma{} "hide others" and the window list@comma{} mainly).

@end itemize

Audio addon:

@itemize
@item
Automatically stop sample instances which point to a buffer of a sample which is about to be destroyed with al_destroy_sample.

@item
alsa: Resume properly after suspending.

@end itemize

Image I/O addon:

@itemize
@item
Make GDI+ support compile cleanly with the headers that come with MinGW package w32api-3.15.

@item
Speed up PNG and BMP saving@comma{} and NSImageFromAllegroBitmap loading.

@end itemize

TTF addon:

@itemize
@item
Add a flag for loading TTFs without anti-aliasing (ALLEGRO_TTF_MONOCHROME).
@end itemize

PhysicsFS addon:

@itemize
@item
Make PhysFS implementation of al_get_current_directory return "/"@comma{} not NULL.
@end itemize

Primitives addon:

@itemize
@item
Fix several failed sub-bitmap related unit tests on Windows.

@item
Made thick outlined triangles look nicer when the triangles are very thin.

@item
Add a debug-only check for primitives addon initialization to aid in code portability.

@end itemize

Examples:

@itemize
@item
Added example demonstrating the effect of premultiplied alpha.

@item
Make 'F' toggle fullscreen window in SPEED (in-game).

@item
Minor improvements to the a5teroids demo.

@end itemize

Documentation:

@itemize
@item
Many documentation updates.

@item
Add list of contributors and a readme for packagers.

@item
Make make_doc tool build cleanly on MSVC@comma{} and work around a problem with recent version of Pandoc on Windows.

@item
Improve styling of PDF output.

@item
Add generated man pages to archives.

@end itemize

Bindings:

@itemize
@item
Implemented array types in the Python wrapper.
@end itemize

@node Changes from 4921 to 4922 September 2010
@chapter Changes from 4.9.21 to 4.9.22 (September 2010)
The developers this time included: Michał Cichoń@comma{} Trent Gamblin@comma{} Evert Glebbeek@comma{} Angelo Mottola@comma{} Elias Pschernig@comma{} Paul Suntsov and Peter Wang.

System:

@itemize
@item
Allow the X11 port to initialise without an X server connection.
@end itemize

Graphics:

@itemize
@item
Fix many bugs with bitmap locking.

@item
Fix many bugs to do with transformations@comma{} flipping and clipping.

@item
Fix many bugs to do with sub-bitmaps as source and destination.

@item
Renamed al_draw_[tinted_]rotated_scaled_bitmap to al_draw_[tinted_]scaled_rotated_bitmap to match the parameter order.

@item
Reimplemented bitmap software rendering routines using newly optimised software triangle renderer@comma{} formerly in the primitives addon.

@item
Add pixel_size field to ALLEGRO_LOCKED_REGION.

@item
Fix bugs to do with pixel alignment on OpenGL.

@item
Fix OpenGL pixel transfer of 15 bpp formats@comma{} where Allegro does not Allegro does not care whether the unused bit is set or not@comma{} but when transferring to OpenGL it will be interpreted as an alpha bit.

@item
Disabled support for drawing a bitmap into itself.

@item
Changed specification of al_draw_*bitmap to not allow transformation and ignore blending/tinting when the screen itself is being drawn (except when drawn into a memory bitmap).

@item
Allow bitmap regions to be outside the bitmap area in drawing routines.

@item
Added al_add_new_bitmap_flag convenience function.

@item
Added three new bitmaps flags ALLEGRO_MAG_LINEAR@comma{} ALLEGRO_MIN_LINEAR@comma{} ALLEGRO_MIPMAP. Removed the config settings for linear/anisotropic min/mag filtering. DirectX side not yet updated.

@item
Register destructors for bitmaps@comma{} so they will be implicitly destroyed when Allegro is shut down. This was only true for some bitmaps previously.

@item
Don't allocate memory buffers for video bitmaps when using OpenGL.

@item
Make al_get_opengl_extension_list() return NULL if called on a non-GL display.

@item
Fix al_create_display for OpenGL forward compatible contexts.

@item
Add al_set_current_opengl_context as an explicit way to set the OpenGL context.

@item
Rename al_is_opengl_extension_supported to al_have_opengl_extension.

@item
Produce more accurate/correct color when going from less to more bits per component.

@item
Fix al_set_new_window_position() everywhere.

@item
Avoid potential deadlock if resizing window to the same size on X11.

@item
Fixed turning off vsync in X11.

@item
Added al_is_d3d_device_lost function.

@item
Dynamically load dinput and d3d DLLs on Windows.

@item
Replaced PeekMessage with GetMessage in window event loops for the D3D and WGL drivers (David Capello).

@end itemize

Input:

@itemize
@item
Added hotplugging support for joysticks on Linux@comma{} Windows and OS X.

@item
Added al_reconfigure_joysticks function.

@item
Merged all joystick devices under a single joystick event source.

@item
Removed al_get_joystick_number.

@item
Add al_is_joystick_installed.

@item
The OS X joystick driver was rewritten; it requires OS X 10.5. The older driver still exists for OS X 10.4 and earlier but is in a semi-updated state with regards to hotplugging.

@item
Allow user to override joystick device paths in the config file (Linux).

@item
Fix iphone touch input and clipping for modes other than w=768@comma{}h=1024.

@item
Fixed missing mouse movement messages on IPhone on touch-up/down. Also changed how mouse buttons are reported - always as button 1 now.

@end itemize

Config:

@itemize
@item
Give config iterators proper types instead of void *.

@item
Make al_get_system_config() always return non-NULL if a system driver is installed.

@end itemize

Events:

@itemize
@item
Rename al_event_queue_is_empty to al_is_event_queue_empty (with compatibility define).
@end itemize

Timers:

@itemize
@item
Add al_add_timer_count function.

@item
Rename al_timer_is_started to al_get_timer_started.

@item
Rename al_current_time to al_get_time (with compatibility define).

@end itemize

File I/O:

@itemize
@item
Add al_open_fs_entry to open a file handle from an FS_ENTRY.

@item
Add al_fclearerr.

@item
Set ALLEGRO_FILEMODE_HIDDEN flag on entries for file names beginning with dot (OS X).

@item
Remove al_is_path_present@comma{} al_fs_entry_is_directory@comma{} al_fs_entry_is_file (all trivial).

@end itemize

Primitives addon:

@itemize
@item
Optimised most of the software rendering routines by a lot.

@item
Triangle drawer was skipping pixels in very thin triangles.

@item
Handle lost d3d devices better.

@item
Fix some bugs found during testing.

@end itemize

Image I/O addon:

@itemize
@item
Fix native image loader on Mac OS X: images that were not 72 dpi would be rescaled to a smaller size.

@item
Added native bitmap saving support for OSX.

@item
Fix jpeg saving when locked region has negative pitch.

@end itemize

Native dialogs addon:

@itemize
@item
Add Windows and OS X text log implementations.

@item
Add ALLEGRO_FILECHOOSER and ALLEGRO_TEXTLOG types instead of conflating them into ALLEGRO_NATIVE_DIALOG.

@item
Fix race condition in al_open_native_text_log.

@item
Rename al_destroy_native_dialog to al_destroy_native_file_dialog.

@item
Rename al_get_native_dialog_event_source to al_get_native_text_log_event_source.

@item
Speed up text log appending by making the reader/writers asynchronous.

@item
Register destructors for file chooser and text log dialogs.

@item
Fix file chooser on Windows returning multiple selections with slashes appended to filenames. If an initial path was specified then the dialog wouldn't open at all; fixed.

@item
Let native dialog functions fail gracefully.

@end itemize

Audio addons:

@itemize
@item
Init destructors even if audio driver fails to install.

@item
Dynamically load dsound DLL on Windows.

@end itemize

Font addons:

@itemize
@item
Added al_shutdown_ttf_addon.

@item
Prevent SIGSEGV for double-closing a file in the TTF addon if it is not a valid font file.

@item
Make al_grab_font_from_bitmap not cause a segmentation fault if the bitmap is garbage.

@item
Some TTF fonts would not render right at small sizes; fixed.

@item
Make al_destroy_font ignore NULL.

@end itemize

Tests:

@itemize
@item
Added a test suite (finally).

@item
Add a shell script to produce test coverage results using lcov.

@end itemize

Examples:

@itemize
@item
Add ex_haiku@comma{} an example based on Mark Oates's Haiku game. Mark generously agreed to let us include it as an Allegro example.

@item
Added a new example ex_joystick_hotplugging.

@item
Added a new example ex_filter.

@item
Make ex_fs_window work on MSVC.

@item
Allow a5teroids to run without audio@comma{} or if audio data doesn't load.

@end itemize

Build system:

@itemize
@item
Re-added CMake option that allows forced static linking of libFLAC.

@item
Replaced the old iphone xcode project with a cmake iphone toolchain.

@end itemize

Documentation:

@itemize
@item
Many updates to the reference manual.
@end itemize

Bindings:

@itemize
@item
Added a workaround to the Python wrapper for a Mingw bug.
@end itemize

@node Changes from 4920 to 4921 July 2010
@chapter Changes from 4.9.20 to 4.9.21 (July 2010)
The main developers this time were: Trent Gamblin@comma{} Matthew Leverton@comma{} Elias Pschernig@comma{} Paul Suntsov@comma{} Peter Wang.

Graphics:

@itemize
@item
Fixed the mis-termed "blend color". There is no more color state.

@itemize
@item
al_set*_blender functions lose the color parameter.

@item
Added 5 new bitmap drawing functions al_draw_tinted*_bitmap with a color parameter. The parameter is used just like the "blend color" before.

@item
All text drawing functions gain a color parameter and use it like they used the "blend color" before.

@item
Primitive drawing functions previously sometimes (and sometimes not) used the "blend color". Not any longer.

@end itemize

@item
Make the current blending mode thread-local state instead of per-display state.

@item
Add explicit display arguments to functions which require a display@comma{} but don't require the rendering context to be current.

@item
Make al_set_target_bitmap change the current display as necessary. al_set_target_bitmap(NULL) releases the rendering context.

@item
Add al_set_target_backbuffer as a convenience.

@item
Remove al_set_current_display.

@item
Give each bitmap its own transformation@comma{} i.e. every bitmap has a transformation@comma{} which is in effect when that bitmap is the target.

@item
Remove sub-bitmap clip-to-parent restriction on create. Add out-of-bounds blitting support to memory bitmaps.

@item
Merge sub-bitmap and parent bitmap clipping; clip source bitmap to (0@comma{}0)-(w@comma{}h); fix flipping to/from clipped bitmaps.

@item
Made mouse cursors independent of displays. You may create cursors without a display@comma{} and you may use a cursor with any display.

@item
Rename al@emph{@{set@comma{}get@}}current_video_adapter to *new_display_adapter for consistency.

@item
Move the new display video adapter and new window position to thread-local state@comma{} like other new display parameters. Make al_store_state also save those parameters with ALLEGRO_STATE_NEW_DISPLAY_PARAMETERS.

@item
Rename al_transform_transform to al_compose_transform. Switched the order of parameters in al_compose_transform and al_copy_transform to match the rest of the transform functions.

@item
Made memory bitmap manipulation without a display possible (again?).

@item
Fixed window resizing in D3D driver. Simplify resize-postponing on Windows.

@item
Make al_create_display abort early when the new_display_adapter is greater than the screen count (X11).

@item
Added ALLEGRO_MINIMIZED flag to the X11 port.

@item
Fixed OpenGL version string parsing (bug #3016654).

@end itemize

Other core:

@itemize
@item
Renamed al_install_timer to al_create_timer@comma{} and al_uninstall_timer to al_destroy_timer.

@item
Rename al_@{get@comma{}set@}_@{appname@comma{}orgname@} to *app_name and *org_name.

@item
Fix assertion failure in al_create_mutex_recursive on Windows (spoofle).

@end itemize

Primitives addon:

@itemize
@item
Made the D3D driver of the primitives addon work with multiple displays. Also made it handle the display being destroyed properly.

@item
Simplified shader recreating on thread destruction when using the primitives addon with D3D.

@item
Avoid double free when shutting down the primitives addon multiple times.

@item
Older Intel cards don't implement DrawIndexedPrimitiveUP correctly. Altered the D3D code to work around that.

@end itemize

Audio addon:

@itemize
@item
Allow setting the DirectSound buffer size via allegro5.cfg.
@end itemize

Image addon:

@itemize
@item
Make GDI+ image loader work with MinGW.
@end itemize

Font addon:

@itemize
@item
Nicolas Martyanoff added al_get_font_descent/ascent functions which query per-font properties. Previously it was necessary to call al_get_text_dimensions (which now just reports the text dimensions as it should).
@end itemize

Native dialogs addon:

@itemize
@item
Add text log window functions (GTK only for now).
@end itemize

Documentation:

@itemize
@item
Many updates to the reference manual.

@item
Improve styling and add Allegro version to HTML pages.

@item
Separated readme_a5.txt into multiple files@comma{} and hopefully improve them.

@end itemize

Build system:

@itemize
@item
Remove INSTALL_PREFIX. Windows users can now use CMAKE_INSTALL_PREFIX to set the install path.

@item
Allow the user to place dependencies in a subdirectory "deps"@comma{} which will be automatically searched.

@end itemize

Examples:

@itemize
@item
Use text log windows in many examples.

@item
Add ex_noframe: test bitmap manipulation without a display.

@end itemize

Bindings:

@itemize
@item
Update Python bindings.
@end itemize

@node Changes from 4919 to 4920 May 2010
@chapter Changes from 4.9.19 to 4.9.20 (May 2010)
The developers this time were: Thomas Fjellstrom@comma{} Evert Glebbeek@comma{} Matthew Leverton@comma{} Milan Mimica@comma{} Paul Suntsov@comma{} Trent Gamblin@comma{} Elias Pschernig@comma{} Peter Wang. With significant contributions from Michał Cichoń.

Core:

@itemize
@item
Add al_malloc@comma{} al_free@comma{} et al. These are now used consistently throughout Allegro and its addons.

@item
Replace al_set_memory_management_functions by a simpler function@comma{} al_set_memory_interface.

@item
Renamed some D3D/Windows specific functions to follow the al@emph{@{verb@}}@{stuff@} convention.

@end itemize

Graphics:

@itemize
@item
Move image I/O framework to core@comma{} i.e. al_load_bitmap@comma{} al_save_bitmap and bitmap file type registration. Image codecs remain in allegro_image.

@item
Added a simple display capabilities querying capability to al_get_display_option: ALLEGRO_MAX_BITMAP_SIZE@comma{} ALLEGRO_SUPPORT_NPOT_BITMAP@comma{} ALLEGRO_CAN_DRAW_INTO_BITMAP@comma{} ALLEGRO_SUPPORT_SEPARATE_ALPHA. (OpenGL only for now)

@item
Fix in OpenGL 3.0 context creation.

@item
Make the extensions mechanism compatible with OpenGL version >= 3. Declared symbols needed by OpenGL 3.2 and 3.3 and brought OpenGL extensions up to date.

@item
Fix an assertion in _al_draw_bitmap_region_memory so it does not trigger when source and destination are the same bitmap.

@item
Fix some locking issues by setting GL_PACK_ALIGNMENT and GL_UNPACK_ALIGNMENT before reading/writing pixels.

@item
Partial implementation of ALLEGRO_FULLSCREEN_WINDOW on OS X (Snow Leopard@comma{} probably Leopard).

@item
Started X11 fullscreen support (resolution switching).

@item
Fix handling of X11 size hints.

@item
Fixed a deadlock related to fullscreen windows under X11 caused by using a nested lock for a condition variable.

@item
Use _NET_WM_ICON to set icon on X11 instead of XSetWMHints.

@item
Get the iPhone OpenGL version more properly. Only use separate blending on iPhone with OpenGL ES 2.0+.

@item
Release the splash view and windows on iPhone@comma{} which makes backgrounding Allegro apps on OS 4.0 work.

@item
Updated iphone port for IPad (only tested in the simulator).

@end itemize

Input:

@itemize
@item
Disabled Raw Input code in Windows. Mouse events now reflect system cursor movements even in fullscreen mode.

@item
Prevent late WM_MOUSELEAVE notifications from overriding mouse state display field (Windows).

@item
Update pollable mouse state with axes events as well as button events on iPhone.

@end itemize

Filesystem:

@itemize
@item
Made the filesystem entry functions work under Windows even if the name passed to al_create_fs_entry has a trailing slash or backslash.
@end itemize

Config routines:

@itemize
@item
Add al@emph{@{load@comma{}save@}}config_file_f.

@item
Reorder al_save_config_file* arguments to match al_save_bitmap and al_save_sample.

@item
Optimise config routines to work well for thousands of keys/sections.

@end itemize

Image addon:

@itemize
@item
Added a GDI+ implementation of the image codecs@comma{} which will be used in favour of libjpeg/libpng if Allegro is compiled with MSVC. Then allegro_image will not require JPEG/PNG DLLs at runtime.

@item
Removed format specific image functions.

@item
Fixed bug in native png loader on iphone: was using the source color space instead of the target color space which made it fail whenever they differed (alpha-less paletted pictures).

@item
Add an autorelease pool around iphone native image loading to stop memory leaks.

@end itemize

Font addons:

@itemize
@item
Sever the tie between allegro_font and allegro_image. The user needs to initialise the image addon separately now.

@item
Rename al_load_ttf_font_entry to al_load_ttf_font_f.

@item
Fixed problem with glyph precision after applying transformations in the ttf addon.

@end itemize

Primitives addon:

@itemize
@item
Added al_init_primitives addon function. This is now required.

@item
Removed ALLEGRO_PRIM_COLOR; ALLEGRO_COLOR can now be used where it was required.

@item
v textures coordinates were off for OpenGL non-power-of-two textures.

@item
Free the vertex cache in al_destroy_display on X11.

@item
Added the dummy vertex shader support to D3D driver of the primitives addon. Without this@comma{} custom vertices either resulted in warnings or outright crashes on some systems.

@item
Bring D3D driver up to speed a little bit: transformations now work properly with sub-bitmap targets; the half-pixel offset now properly interacts with transformations; al_set_target_bitmap does not clear the transformation; the proper transformation is set at display creation.

@item
Cull the primitives that are completely outside the clipping region.

@item
Scale the numbers of vertices for the curvy primitives with the scale of the current transformation.

@end itemize

Audio addon:

@itemize
@item
Remove driver parameter from al_install_audio.

@item
Rename al_get_depth_size to al_get_audio_depth_size.

@item
Rename al_get_audio_stream_buffer to al_get_audio_stream_fragment.

@item
Many improvements to AQueue driver.

@end itemize

Audio codecs:

@itemize
@item
Add MOD/S3M/XM/IT file support@comma{} using the DUMB library.

@item
Revert to a monolithic allegro_acodec addon@comma{} i.e. remove separate allegro_flac@comma{} allegro_vorbis addons. WAV file support is in allegro_acodec.

@item
Implement DLL loading for FLAC/Vorbis/DUMB on Windows. allegro_acodec will load the DLL at runtime to enable support for that format. If your program does not require said format@comma{} you don't need to distribute the DLL.

@item
Remove format-specific loader/saver audio codec functions.

@item
Make acodec loaders have consistent file closing behaviour.

@item
Optimised wave file loading.

@end itemize

Examples:

@itemize
@item
Make SPEED port run acceptably on graphics drivers without FBOs.
@end itemize

Documentation:

@itemize
@item
Added documentation for the public Direct3D specific functions.

@item
Documented ALLEGRO_OPENGL_3_0 and ALLEGRO_OPENGL_FORWARD_COMPATIBLE.

@end itemize

Other:

@itemize
@item
Many bug and documentation fixes.
@end itemize

@node Changes from 4918 to 4919 April 2010
@chapter Changes from 4.9.18 to 4.9.19 (April 2010)
The main developers this time were: Milan Mimica@comma{} Trent Gamblin@comma{} Paul Suntsov@comma{} Peter Wang. Other contributions from: Evert Glebbeek and Shawn Hargreaves.

Graphics:

@itemize
@item
Implemented support for transformations for memory bitmaps.

@item
Transformations now work properly when the target bitmap is a sub-bitmap in OpenGL (still broken in D3D). Also fixed OpenGL bitmap drawing in the same scenario (it used to always revert to software drawing).

@item
Use the memory drawers when the source bitmap is the backbuffer with the rotated/scaled bitmaps.

@item
Make al_put_pixel clip even if the bitmap is locked@comma{} which was the reason why software primitives were not clipping.

@item
Added al_put_blended_pixel@comma{} the blended version of al_put_pixel.

@item
Sub bitmaps of sub bitmaps must be clipped to the first parent.

@item
Don't clear the transformation when setting the target bitmap in OpenGL.

@item
Implemented ALLEGRO_NOFRAME and ALLEGRO_FULLSCREEN_WINDOW in WGL.

@item
Set the ALLEGRO_DISPLAY->refresh_rate variable for fullscreen modes under D3D.

@item
Make d3d_clear return immediately if the display is in a lost state.

@item
Rewrote the function that reads the OpenGL version so it works for previously unrecognised versions@comma{} and future versions.

@item
Check for framebuffer extension on iPhone properly.

@item
Fixed locking bugs on iPhone. allegro_ttf works now.

@end itemize

Input:

@itemize
@item
Removed al_set_mouse_range.

@item
Don't call al_get_mouse_state if the mouse driver isn't installed (Windows).

@item
Send events even when the mouse cursor leaves the window@comma{} while any buttons are held down (Windows and Mac OS X; X11 already did this).

@item
Allow mouse presses and accelerometer data simultaneously. (iPhone)

@end itemize

File I/O:

@itemize
@item
Optimise al_fread@{16@comma{}32@}* by using only one call to al_fread each.

@item
Optimise al_fgetc() for stdio backend.

@end itemize

Path:

@itemize
@item
Fix an infinite loop in _find_executable_file when searching for the executable on the PATH (Alan Coopersmith).
@end itemize

Primitives addon:

@itemize
@item
Made the software driver for the primitives addon check for blending properly. Also@comma{} fixed two line shaders.

@item
Made the D3D driver thread-safe. The whole addon should be thread-safe now.

@item
The addon now officially supports 3D vertices@comma{} even though the software component can't draw them yet.

@item
Changed the way the primitives addon handles the OpenGL state (fixes a few bugs and makes life easier for raw-OpenGL people)

@end itemize

Image addon:

@itemize
@item
Optimised BMP@comma{} PCX@comma{} TGA loaders.

@item
Fix loading 16-bit BMP files.

@item
Fix loading grayscale TGA images.

@item
Nial Giacomelli fixed a bug where images could be corrupt using the native Apple image loader (iPhone).

@end itemize

Audio addon:

@itemize
@item
Add al_is_audio_installed.

@item
Fix al_attach_sample_instance_to_mixer for int16 mixers.

@item
Implement attaching an INT16 mixer to another INT16 mixer.

@item
Handle conversion when an INT16 mixer is attached to a UINT16 voice.

@end itemize

Build system:

@itemize
@item
Add an option to disable Apple native image loader (iPhone and OS X).

@item
Add ttf addon target to iPhone xcode project.

@end itemize

Examples:

@itemize
@item
Special contribution from Shawn "the Progenitor" Hargreaves.
@end itemize

@node Changes from 4917 to 4918 March 2010
@chapter Changes from 4.9.17 to 4.9.18 (March 2010)
The main developers this time were: Trent Gamblin@comma{} Elias Pschernig@comma{} Evert Glebbeek@comma{} Peter Wang. Other contributions from: Milan Mimica@comma{} Paul Suntsov@comma{} Peter Hull.

Graphics:

@itemize
@item
Fixed broken drawing into memory bitmaps as access to the global transformation required an active display. Now both transformation and current blending mode are stored in the display but provisions are made for them to also work if the current thread has no display.

@item
Fixed a bunch of clipping problems with OpenGL@comma{} especially with sub-bitmaps.

@item
Fix bug in OpenGL FBO setup when the target bitmap is the sub-bitmap of a bitmap with an FBO.

@item
Fixed crash in al_get_num_display_modes under OSX 10.5.

@item
Fixed some problems in _al_convert_to_display_bitmap that caused problems in WGL FS display resize.

@item
Fixed al_set_current_display(NULL) on WGL.

@item
Added subtractive blending. al_set_blender() takes another parameter.

@item
Added ALLEGRO_FULLSCREEN_WINDOW display flag (X11 and D3D for now).

@item
Allow changing ALLEGRO_FULLSCREEN_WINDOW with al_toggle_display_flag.

@item
Figured out how to switch display modes using Carbon on OS X 10.6.

@item
Stop the OpenGL driver on iPhone from changing the currently bound FBO behind our back when locking a bitmap.

@item
Prevent screen flicker at app startup by simulating the splash screen (iPhone).

@end itemize

Input:

@itemize
@item
Added "pressure" field to the mouse event struct and mouse state@comma{} which can be used with pressure sensitive pointing devices@comma{} i.e. tablets/stylus (currently OS X only).

@item
Report scroll ball "w" position in mouse event struct@comma{} on OS X.

@item
Removed OS X 10.1 specific code from mouse driver. We don't support OS X 10.1 any more.

@item
Fix building of Linux joystick driver on some systems.

@end itemize

Threads:

@itemize
@item
Fix a problem when al_join_thread() is called immediately after al_start_thread(). The thread could be joined before the user's thread function starts at all.

@item
Fix a possible deadlock with al_join_thread() on Windows (thanks to Michał Cichoń for the report).

@item
Fix some error messages running threading examples on OS X.

@end itemize

Other core:

@itemize
@item
Added version check to al_install_system.

@item
Rename al_free_path to al_destroy_path for consistency.

@item
Make it possible to have an empty organization name with al_set_org_name().

@item
Changed implementation of AL_ASSERT to use POSIX-standard assert instead.

@item
Removed al_register_assert_handler.

@item
Fix timer macros which did not parenthesize their arguments.

@item
Make stricmp@comma{} strlwr@comma{} strupr macros conditionally defined.

@end itemize

Audio addon:

@itemize
@item
Rename al_attach_sample_to_mixer to al_attach_sample_instance_to_mixer.

@item
Fix a premature free() when detaching samples and other audio objects.

@item
Fix mixers attaching to mixers.

@item
Pass correct number of samples to mixer postprocess callback.

@item
AudioQueue code was not compiled even though version requirements may have been met (OS X).

@end itemize

Primitives addon:

@itemize
@item
Make high-level primitives functions thread safe. (note: the DirectX driver is not yet thread safe)

@item
Fix a bug causing crashes on Windows 7 when using the primitives addon and Direct3D (Invalid vertex declarations were being used).

@item
Fixed another issue with primitives drawing to memory bitmaps.

@item
Hopefully fix the bitmap clipping bugs@comma{} and make the D3D and OGL/Software outputs to be near-identical again.

@end itemize

Image addon:

@itemize
@item
Added a "native loader" for MacOS X that uses the NSImage bitmap loading functions. In addition to .png and .jpg@comma{} this allows us to read a whole zoo of image formats (listed in allegro.log).

@item
Add native support for tif@comma{} jpg@comma{} gif@comma{} png@comma{} BMPf@comma{} ico@comma{} cur@comma{} xbm formats to under IPhone.

@item
Fixed an over-zealous ASSERT() that disallowed passing NULL to al_register_bitmap_loader() despite this being an allowed value.

@item
Avoid using a field which is deprecated in libpng 1.4.

@end itemize

Color addon:

@itemize
@item
Make al_color_name_to_rgb return a bool.
@end itemize

Native dialogs addon:

@itemize
@item
Fixed some erratic behaviour and crashes on OS X.
@end itemize

Build system:

@itemize
@item
Set VERSION and SOVERSION properties on targets to give Unix shared libraries proper sonames. e.g. liballegro[@emph{addon].so.4.9@comma{} liballegro[}addon].4.9.dylib

@item
Static libraries are now named without version number suffixes to minimise the differences with the shared libraries@comma{} which no longer have the versions in their base names. e.g. liballegro[@emph{addon]-static.a@comma{} allegro[}addon]-static.lib

@item
Windows import libraries are also named without version suffixes@comma{} e.g. liballegro[@emph{addon].a@comma{} allegro[}addon].lib

@item
DLLs are named with a short version suffix@comma{} not the full version. e.g. allegro-4.9.dll instead of allegro-4.9.18.dll

@item
Add support for Mac OS X frameworks (untested)@comma{} which are enabled with WANT_FRAMEWORKS and WANT_EMBED. There is one framework per addon.

@item
Search for static OGG/Vorbis libraries built with MSVC named libogg_static.lib@comma{} etc.

@item
Updated iPhone XCode project.

@end itemize

Examples:

@itemize
@item
ex_mixer_pp: New example to test mixer postprocessing callbacks.

@item
ex_threads: Make it more visually interesting and test out per-display transformations.

@item
ex_ogre3d: New example demonstrating use of Ogre graphics rendering alongside Allegro (currently GLX only). Commented out in the build system for now.

@item
ex_fs_window: New example to test ALLEGRO_FULLSCREEN_WINDOW flag and al_toggle_display_flag.

@item
ex_blend2: Updated to test subtractive blending@comma{} including scaled/rotated blits and the primitives addon.

@item
ex_mouse_events: Show "w" field.

@item
ex_prim: Added possibility to click the mouse to advance screens (for iPhone).

@item
ex_vsync: Display config parameters and warning.

@item
ex_gldepth: Make the textures appear again though we're not sure why they disappeared.

@end itemize

Documentation:

@itemize
@item
Many documentation updates.

@item
Add which header file and which library to link with for each page of the reference manual.

@item
Minor improvements to HTML styling and man page output.

@end itemize

@node Changes from 4916 to 4917 February 2010
@chapter Changes from 4.9.16 to 4.9.17 (February 2010)
The main developers this time were: Trent Gamblin@comma{} Elias Pschernig@comma{} Evert Glebbeek@comma{} Paul Suntsov@comma{} Peter Wang.

Core:

@itemize
@item
Removed END_OF_MAIN() everywhere.

For MSVC@comma{} we pass a linker option through a #pragma.

On Mac OS X@comma{} we rename main() and call it from a real main() function in the allegro-main addon. The prototype for main() for C++ applications should be "int main(int@comma{} char **)"@comma{} or the code will not compile on OS X. For C@comma{} either of the normal ANSI forms is fine.

#define ALLEGRO_NO_MAGIC_MAIN disables the #pragma or name mangling@comma{} so you can write a WinMain() or use al_run_main() yourself.

@end itemize

Graphics:

@itemize
@item
Fixed a bug in the OpenGL driver where al_draw_bitmap() wouldn't handle blitting from the back buffer.

@item
Changing the blending color now works with deferred drawing (Todd Cope).

@item
Avoid some problems with window resizing in Windows/D3D.

@item
Added al_get_d3d_texture_position.

@item
Fixed bug under X11 where al_create_display() would always use the display options from the first al_create_display() call.

@item
Properly implemented osx_get_opengl_pixelformat_attributes().

@item
Fixed automatic detection of colour depth on OS X.

@item
Fixed al_get_num_display_modes() on Mac OS X 10.6.

@item
Removed al_get_num_display_formats@comma{} al_get_display_format_option@comma{} al_set_new_display_format functions as they can't be implemented on OSX/iPhone/GPX ports (and were awkward to use).

@item
Replaced al_toggle_window_frame function with a new function al_toggle_display_flags.

@item
al_load_bitmap() and al_convert_mask_to_alpha() no longer reset the current transformation.

@item
Add a minimize button to all non-resizable windows on Windows.

@item
The wgl display switch-in/out vtable entries were swapped (Milan Mimica).

@end itemize

Input:

@itemize
@item
Some keycodes were out of order in src/win/wkeyboard.c

@item
Fixed mouse range after resizing window on Windows.

@item
Fixed (or worked around) a joystick axis detection problem on Mac OS X.

@item
Change timer counts from 'long' to 'int64_t'.

@end itemize

File I/O:

@itemize
@item
Remove `ret_success' arguments from al_fread32be/le.
@end itemize

allegro-main addon:

@itemize
@item
Added an "allegro-main" addon to hold the main() function that is required on Mac OS X. This way the user can opt out of it.
@end itemize

Primitives addon:

@itemize
@item
Added support for sub-bitmap textures in OpenGL driver.

@item
Added support for sub-bitmap textures in D3D driver. Made D3D sub-bitmaps work better with user D3D code.

@end itemize

Audio addons:

@itemize
@item
Changed the _stream suffix to _f in the audio loading functions.

@item
Added the stream versions of loading functions for wav@comma{} ogg and flac.

@item
Rename audio I/O functions to al_load@emph{@{format@}@comma{} al_save}@{format@}@comma{} al_load@emph{@{format@}}f and al_save@emph{@{format@}}f.

@item
Added al_load_sample_f@comma{} al_save_sample_f@comma{} al_load_audio_stream_f and the related functions.

@item
Fixed a bug where al_save_sample was improperly handling the extension.

@item
al_drain_audio_stream would hang on an audio stream in the 'playing' state (the default) which wasn't attached to anything.

@item
Fixed a potential deadlock on destroying audio streams by shutting down the audio driver.

@item
Comment out PA_SINK_SUSPENDED check@comma{} which breaks the PulseAudio driver@comma{} at least on Ubuntu 9.10.

@item
Replace unnecessary uses of `long' in audio interfaces.

@end itemize

Image addons:

@itemize
@item
Fixed return values of al_save_bmp_f and al_save_pcx_f being ignored.

@item
Changed the _stream suffix to _f in the image loading functions.

@end itemize

TTF addon:

@itemize
@item
Drawing TTF fonts no longer resets the current transformation.
@end itemize

Build system:

@itemize
@item
Add the CMake option FLAC_STATIC@comma{} required when using MSVC with a static FLAC library.

@item
Link with zlib if linking with PhysicsFS is not enough.

@item
Updated iPhone project files.

@end itemize

Documentation:

@itemize
@item
Many documentation updates.
@end itemize

Examples:

@itemize
@item
ex_display_options: Added mouse support@comma{} query current display settings@comma{} display error if a mode can't be set.
@end itemize

Bindings:

@itemize
@item
Made the Python wrapper work under OSX.

@item
Added a CMake option to build the Python wrapper.

@item
Added al_run_main() mainly to support the Python wrapper on OSX.

@end itemize

@node Changes from 49151 to 4916 November 2009
@chapter Changes from 4.9.15.1 to 4.9.16 (November 2009)
The main developers this time were: Trent Gamblin and Paul Suntsov.

Graphics:

@itemize
@item
Fixed clipping of the right/bottom edges for the software primitives.

@item
Enable sub-pixel accuracy for rotated blitting in software.

@item
Made the D3D output look closer to the OGL/Software output.

@item
OpenGL driver now respects the 'linear' texture filtering configuration option. Anisotropic is interpreted as linear at this time.

@item
Added deferred bitmap drawing (al_hold_bitmap_drawing).

@item
Made the font addons use deferred bitmap drawing instead of the primitives addon@comma{} removing the link between the two addons.

@item
Changed al_transform_vertex to al_transform_coordinates to make the function more versatile.

@item
Transfered transformations from the primitives addon into the core. Added documentation for that@comma{} as well as a new example@comma{} ex_transform. Transformations work for hardware accelerated bitmap drawing (including fonts) but the software component is not implemented as of yet. Also fixed some bugs inside the code of the transformations.

@item
Increase performance of screen->bitmap blitting in the D3D driver.

@item
Fixed a strange bug with textured primitives (u/v repeat flags were being ignored on occasion).

@item
Added ALLEGRO_VIDEO_BITMAP for consistency.

@end itemize

Input:

@itemize
@item
Work around a memory leak in iPhone OS that occurs when the accelerometer is on during touch input.
@end itemize

Other core:

@itemize
@item
Don't #define true/false/bool macros in C++.
@end itemize

Audio addon:

@itemize
@item
Some minor cleanups to the Audio Queue driver.
@end itemize

@node Changes from 4915 to 49151 October 2009
@chapter Changes from 4.9.15 to 4.9.15.1 (October 2009)
@itemize
@item
Fixed a problem building on MinGW (dodgy dinput.h).
@end itemize

@node Changes from 4914 to 4915 October 2009
@chapter Changes from 4.9.14 to 4.9.15 (October 2009)
The main developers this time were: Trent Gamblin@comma{} Elias Pschernig@comma{} Matthew Leverton@comma{} Paul Suntsov@comma{} Peter Wang.

Core:

@itemize
@item
Set the initial title of new windows to the app name.

@item
Add al_set/get_event_source_data.

@item
Make locking work on bitmaps that didn't have an FBO prior to the call on iPhone.

@item
Make al_get_opengl_fbo work on iPhone.

@item
Made iPhone port properly choose a visual (so depth buffer creation works).

@end itemize

Font addon:

@itemize
@item
Improved drawing speed for longish strings. The font addon now depends on the primitives addon.
@end itemize

Primitives addon:

@itemize
@item
Made the ribbon drawer handle the case of extremely sharp corners more gracefully.

@item
Make al_draw_pixel use blend color in the D3D driver.

@item
Added POINT_LIST to the primitive types.

@item
Various fixes for the D3D driver: fixed line loop drawing; made the indexed primitives a little faster; added workabouts for people with old/Intel graphics cards.

@item
Fall back to software if given a memory bitmap as a texture.

@item
Removed OpenGL state saving code@comma{} it was causing massive slowdown when drawing. Also removed glFlush for the same reason.

@end itemize

Audio addon:

@itemize
@item
Added PulseAudio driver.

@item
Support AudioQueue driver on Mac OS X.

@item
Add al_uninstall_audio exit function.

@item
Added ALLEGRO_EVENT_AUDIO_STREAM_FINISHED event to signify when non-looping streams made with al_load_audio_stream reach the end of the file.

@item
Fixed a deadlock when destroying voices.

@item
Handle underruns in the r/w ALSA updater.

@item
Minor change to the ALSA driver to improve compatibility with PulseAudio.

@end itemize

Documentation:

@itemize
@item
Replaced awk/sh documentation scripts with C programs.
@end itemize

@node Changes from 4913 to 4914 September 2009
@chapter Changes from 4.9.13 to 4.9.14 (September 2009)
The main developers this time were: Trent Gamblin@comma{} Elias Pschernig@comma{} Paul Suntsov@comma{} Peter Wang. Other contributions from: Evert Glebbeek@comma{} Matthew Leverton.

Ports:

@itemize
@item
Elias Pschernig and Trent Gamblin started a iPhone port.
@end itemize

Graphics:

@itemize
@item
Added al_get_opengl_texture_size and al_get_opengl_texture_position functions.

@item
Try to take into account GL_PACK_ALIGNMENT@comma{} GL_UNPACK_ALIGNMENT when locking OpenGL bitmaps.

@item
Fixed all (hopefully) conversion mistakes in the color conversion macros.

@item
Sped up memory blitting@comma{} which was using conversion even with identical formats (in some cases).

@item
Make al_set_current_display(NULL); unset the current display.

@item
Added ALLEGRO_LOCK_READWRITE flag for al_lock_bitmap (in place of 0).

@item
Fixed window titles which contain non-ASCII characters in X11.

@item
Added OES_framebuffer_object extension.

@end itemize

Input:

@itemize
@item
Added a lot more system mouse cursors.

@item
Renamed al_get_cursor_position to al_get_mouse_cursor_position.

@item
Prevent Windows from intercepting ALT for system menus.

@end itemize

Filesystem:

@itemize
@item
Make the path returned by al_get_entry_name() owned by the filesystem entry so the user doesn't need to free it manually.

@item
Renamed the filesystem entry functions@comma{} mainly to include "fs_entry" in their names instead of just "entry".

@item
Reordered and renamed ALLEGRO_FS_INTERFACE members.

@item
Make al_read_directory() not return . and .. directory entries.

@item
Renamed al_create_path_for_dir to al_create_path_for_directory.

@item
Added al_set_standard_file_interface@comma{} al_set_standard_fs_interface.

@end itemize

Events:

@itemize
@item
Exported ALLEGRO_EVENT_TYPE_IS_USER.
@end itemize

Threads:

@itemize
@item
Added a new function al_run_detached_thread.
@end itemize

Other core:

@itemize
@item
Put prefixes on register_assert_handler@comma{} register_trace_handler.

@item
Added functions to return the compiled Allegro version and addon versions.

@item
Added al_ prefix to fixed point routines and document them.

@item
Added al_get_system_config().

@item
Renamed al_system_driver() to al_get_system_driver().

@item
Added 64-bit intptr_t detection for Windows.

@item
Added work-around to make OS X port compile in 64 bit mode.

@end itemize

Addons:

@itemize
@item
Renamed addons from a5_* to allegro_*.
@end itemize

Image addon:

@itemize
@item
Renamed the IIO addon to "allegro_image".

@item
Renamed *_entry functions that take ALLEGRO_FILE * arguments to *_stream.

@item
Fixed off-by-one error in greyscale JPEG loader.

@end itemize

Audio addons:

@itemize
@item
Renamed the kcm_audio addon to "allegro_audio".

@item
Renamed ALLEGRO_STREAM and stream functions to ALLEGRO_AUDIO_STREAM and al_*audio_stream*.

@item
Renamed al_stream_from_file to al_load_audio_stream

@item
Added int16 mixing and configurable frequency and depth for default mixer/voice (see configuration file).

@item
Fixed FLAC decoding and added FLAC streaming support.

@item
Changed the function signature of al_get_stream_fragment() to be more straightforward.

@item
Fixed bug in kcm audio that caused data to be deleted that was still used.

@item
Made ALSA audio driver work when the driver does not support mmap (commonly because the ALSA really is PulseAudio).

@item
Removed al_is_channel_conf function.

@end itemize

Font addons:

@itemize
@item
Optimized font loading by converting the mask color on a memory copy instead of have to lock a texture.

@item
Made the ttf addon read from file streams.

@end itemize

Primitives addon:

@itemize
@item
Fixed the direction of the last segment in software line loop@comma{} and fixed the offsets in the line drawer.

@item
Fixed the thick ribbon code in the primitives addon@comma{} was broken for straight segments.

@item
Various fixes/hacks for the D3D driver of the primitives addon: hack to make the indexed primitives work and a fix for the textured primitives.

@item
Various enhancements to the transformations API: const correctness@comma{} transformation inverses and getting the current transformation.

@item
Added support for custom vertex formats.

@item
Flipped the v axis of texture coordinates for primitives. Now (u=0@comma{} v=0) correspond to (x=0@comma{} y=0) on the texture bitmap.

@item
Added a way to use texture coordinates measured in pixels. Changed ALLEGRO_VERTEX to use them by default.

@end itemize

PhysicsFS:

@itemize
@item
PhysFS readdir didn't prepend the parent directory name to the returned entry's path.

@item
Set execute bit on PhysFS directory entries.

@end itemize

Examples:

@itemize
@item
Made examples report errors using the native dialogs addon if WANT_POPUP_EXAMPLES is enabled in CMake (default).

@item
Added new example ex_draw_bitmap@comma{} which simply measures FPS when drawing a bunch of bitmaps (similar to exaccel in A4).

@end itemize

Documentation:

@itemize
@item
Many documentation updates and clarifications.

@item
Fixed up Info and PDF documentation.

@end itemize

Bindings:

@itemize
@item
Added a script to generate a 1:1 Python wrapper (see @code{python} directory).
@end itemize

@node Changes from 4912 to 4913 August 2009
@chapter Changes from 4.9.12 to 4.9.13 (August 2009)
The main developers this time were: Trent Gamblin@comma{} Elias Pschernig@comma{} Paul Suntsov@comma{} Peter Wang. Other contributions from: Todd Cope@comma{} Evert Glebbeek@comma{} Michael Harrington@comma{} Matthew Leverton.

Ports:

@itemize
@item
Trent Gamblin started a port to the GP2X Wiz handheld console.
@end itemize

Graphics:

@itemize
@item
Some OpenGL bitmap routines were not checking whether the target bitmap was locked.

@item
Scaled bitmap drawer was not setting the blend mode.

@item
Fixed a bug where al_map_rgb followed by al_unmap_rgb would return different values.

@item
Fixed problems with sub-sub-bitmaps.

@item
Fixed window placement on OS X@comma{} which did not properly translate the coordinates specified by the user with al_set_new_window_position().

@item
Made is_wgl_extension_supported() fail gracefuly.

@item
Added ALLEGRO_ALPHA_TEST bitmap flag.

@item
Minor optimizations in some memory blitting routines.

@end itemize

Input:

@itemize
@item
Replaced (ALLEGRO_EVENT_SOURCE *) casting with type-safe functions@comma{} namely al_get_keyboard_event_source@comma{} al_get_mouse_event_source@comma{} al_get_joystick_event_source@comma{} al_get_display_event_source@comma{} al_get_timer_event_source@comma{} etc.

@item
Made it so that users can derive their own structures from ALLEGRO_EVENT_SOURCE. al_create_user_event_source() is replaced by al_init_user_event_source().

@item
Fixed a problem on Windows where the joystick never regains focus when tabbing away from a window.

@item
Fixed a problem with missing key repeat with broken X.Org drivers.

@item
Implemented ALLEGRO_EVENT_MOUSE_ENTER_DISPLAY@comma{} ALLEGRO_EVENT_MOUSE_LEAVE_DISPLAY for X11.

@end itemize

Image I/O addon:

@itemize
@item
Changed return type of al_save_bitmap() to bool.

@item
Separated al_add_image_handler into al_register_bitmap_loader@comma{} al_register_bitmap_saver@comma{} etc.

@item
Made JPEG and PNG loaders handle al_create_bitmap() failing.

@item
Speed up JPEG loading and saving.

@item
Fixed a reinitialisation issue in iio.

@end itemize

Audio addons:

@itemize
@item
Moved basic sample loading/saving routines to kcm_audio from acodec and added file type registration functions.

@item
Moved WAV support into kcm_audio.

@item
Made WAV loader not choke on extra chunks in the wave.

@item
Separated acodec into a5_flac@comma{} a5_vorbis addons. You need to initialise them explicitly. Removed sndfile support.

@item
Renamed al_*_oggvorbis to al_*_ogg_vorbis.

@item
Changed argument order in al_save_sample and al_stream_from_file.

@item
Reordered parameters in al_attach_* functions to follow the word order.

@item
Renamed a few streaming functions to refer to fragments/buffers as fragments consistently.

@item
Added missing getters for ALLEGRO_SAMPLE fields.

@item
Fixed mutex locking problems with kcm_audio objects.

@item
Avoid underfilling a stream when it is fed with a short looping stream.

@end itemize

Other addons:

@itemize
@item
Added glyph advance caching for the TTF addon.

@item
Renamed al_register_font_extension to al_register_font_loader. Match the file name extension case insensitively.

@end itemize

Documentation:

@itemize
@item
Lots of documentation updates.

@item
Added a short "Getting started guide" to the reference manual.

@end itemize

Examples:

@itemize
@item
Added another example for kcm_audio streaming: ex_synth.
@end itemize

Build system:

@itemize
@item
Fix pkg-config .pc files generated for static linking.

@item
DLL symbols are now exported by name@comma{} not ordinals.

@end itemize

@node Changes from 4911 to 4912 July 2009
@chapter Changes from 4.9.11 to 4.9.12 (July 2009)
@itemize
@item
Fixed bugs in Windows keyboard driver (Todd Cope).

@item
Fixed problems with ALLEGRO_MOUSE_STATE buttons on Windows (Milan Mimica).

@item
Fixed problems with PhysicsFS addon DLL on MSVC (Peter Wang).

@item
Set the D3D texture address mode to CLAMP (Todd Cope).

@item
Fixed hang if Allegro was initialized more than once on Windows (Michael Harrington).

@item
Added a CMake option to force the use of DllMain style TLS on Windows@comma{} for use with C# bindings (Michael Harrington).

@item
Fixed a bug where drawing circles with a small radius would crash (Elias Pschernig).

@item
Fixed several memory leaks throughout the libraries (Trent Gamblin).

@item
Fixed some compilation warnings on Mac OS X (Evert Glebbeek).

@item
Small documentation updates.

@end itemize

@node Changes from 49101 to 4911 June 2009
@chapter Changes from 4.9.10.1 to 4.9.11 (June 2009)
The main developers this time were: Trent Gamblin@comma{} Milan Mimica@comma{} Elias Pschernig@comma{} Paul Suntsov@comma{} Peter Wang. Other contributions from: Christopher Bludau@comma{} David Capello@comma{} Todd Cope@comma{} Evert Glebbeek@comma{} Peter Hull.

Graphics:

@itemize
@item
Changed rotation direction in memory blitting routines to match D3D/OpenGL routines.

@item
Made al_set_target_bitmap not create an FBO if the bitmap is locked.

@item
Added explicit FBO handling functions al_get_opengl_fbo and al_remove_opengl_fbo in case we weren't quite clever enough above and the user has to intervene manually.

@item
Added OpenGL 3.1 support and a bunch of new OpenGL extensions.

@item
Fixed al_inhibit_screensaver on Windows

@item
Fixed selection of X pixel formats with WGL if a new bitmap has alpha.

@item
Made X11 icon work regardless of the backbuffer format.

@end itemize

Input:

@itemize
@item
Ditched DirectInput keyboard driver and replaced it with WinAPI. Fixes several issues the old driver had.

@item
Rewrote Windows mouse driver to use WinAPI instad of DirectInput.

@item
Added al_get_joystick_number.

@end itemize

Filesystem:

@itemize
@item
Merged ALLEGRO_FS_HOOK_ENTRY_INTERFACE into ALLEGRO_FS_INTERFACE and made ALLEGRO_FS_INTERFACE public.

@item
Added al_set_fs_interface and al_get_fs_interface.

@item
Made al_opendir take an ALLEGRO_FS_ENTRY.

@item
Removed functions which are obsolete or probably have no use.

@item
Made al_get_standard_path(ALLEGRO_PROGRAM_PATH) return a path with an empty filename.

@end itemize

Path routines:

@itemize
@item
Renamed functions to follow conventions.
@end itemize

File I/O:

@itemize
@item
Fix al_fgets() returning wrong pointer value on success.
@end itemize

Primitives addon:

@itemize
@item
Added support for textured primitives in software.

@item
Introduced ALLEGRO_PRIM_COLOR@comma{} removed ALLEGRO_VBUFFER.

@item
Exposed the software line and triangle drawers to the user.

@item
Added rounded rectangles.

@item
Fix an extraneous pixel bug in the triangle drawer.

@end itemize

Audio addon:

@itemize
@item
Change from using generic get/set audio property functions to specific getter/setter functions.

@item
Change return types on many functions to return true on success instead of zero. (Watch out when porting your code@comma{} the C compiler won't help.)

@end itemize

Native dialogs:

@itemize
@item
Added a Windows implementation.

@item
Added a title to al_show_native_message_box().

@end itemize

Other addons:

@itemize
@item
Implemented the filesystem interface for PhysicsFS and demonstrate its use in ex_physfs.

@item
Fixed al_color_html_to_rgb.

@end itemize

Examples:

@itemize
@item
Added an OpenGL pixel shader example.
@end itemize

Build system:

@itemize
@item
Output separate pkg-config .pc files for static linking.
@end itemize

@node Changes from 4910 to 49101 May 2009
@chapter Changes from 4.9.10 to 4.9.10.1 (May 2009)
@itemize
@item
Fixed uses of snprintf on MSVC.

@item
Disabled ex_curl on Windows as it requires Winsock.

@end itemize

@node Changes from 4991 to 4910 May 2009
@chapter Changes from 4.9.9.1 to 4.9.10 (May 2009)
The main developers this time were: Trent Gamblin@comma{} Evert Glebbeek@comma{} Milan Mimica@comma{} Elias Pschernig@comma{} Peter Wang. Other contributions from: Peter Hull@comma{} Paul Suntsov.

Graphics:

@itemize
@item
Renamed al_clear() to al_clear_to_color().

@item
Renamed al_opengl_version() to al_get_opengl_version().

@item
Changed the direction of rotation for al_draw_rotated* from counter-clockwise to clockwise.

@item
Added new pixel format ALLEGRO_PIXEL_FORMAT_ABGR_8888_LE which guanrantees component ordering.

@item
Added ALLEGRO_NO_PRESERVE_TEXTURE flag.

@item
Fixed horizontal flipping in plain software blitting routines.

@item
Fixed some blending bugs in the OpenGL driver.

@item
Made OpenGL driver fall back to software rendering if separate alpha blending is requested but not supported.

@item
Added a config option which allows pretending a lower OpenGL version.

@item
Implemented al_get_num_display_formats()@comma{} al_get_display_format_option() and al_set_new_display_format() for WGL.

@item
Fixed bug in al_get_display_format_option() with the GLX driver.

@item
Fixed a bug in the D3D driver that made display creation crash if the first scored mode failed.

@item
Made the OpenGL driver prefer the backbuffer format for new bitmaps.

@item
Defer FBO creation to when first setting a bitmap as target bitmap.

@end itemize

Input:

@itemize
@item
Renamed some joystick functions.

@item
Account for caps lock state in OS X keyboard driver.

@item
Made UTF-8 input work on X11.

@end itemize

File I/O:

@itemize
@item
Separated part of fshook API into a distinct file I/O API (actually generic streams).

@item
Make the file I/O API match stdio more closely and account for corner cases. (incomplete)

@item
Made it possible to set a stream vtable on a per-thread basis@comma{} which affects al_fopen() for that thread.

@item
Added al_fget_ustr() to read a line conveniently.

@item
Change al_fputs() not to do its own CR insertion.

@item
Add al_fopen_fd() to create an ALLEGRO_FILE from an existing file descriptor.

@end itemize

Filesystem:

@itemize
@item
Changed al_getcwd@comma{} al_get_entry_name to return ALLEGRO_PATHs.

@item
Renamed al_get_path to al_get_standard_path@comma{} and to return an ALLEGRO_PATH.

@item
Changed al_readdir to return an ALLEGRO_FS_ENTRY.

@item
Added al_path_create_dir.

@item
Removed some filesystem querying functions which take string paths (ALLEGRO_FS_ENTRY versions will do).

@end itemize

Config routines:

@itemize
@item
Added functions to traverse configurations structures.

@item
Change al_save_config_file() return type to bool.

@item
Removed an arbitrary limit on the length of config values.

@item
Renamed configuration files to allegro5.cfg and allegro5rc.

@end itemize

String routines:

@itemize
@item
Allegro 4-era string routines removed.

@item
Added al_ustr_to_buffer().

@end itemize

Other core:

@itemize
@item
Renamed al_thread_should_stop to al_get_thread_should_stop.

@item
Added a new internal logging mechanism with configurable debug "channels"@comma{} verbosity levels and output formatting.

@item
Cleaned up ASSERT namespace pollution.

@end itemize

Font addons:

@itemize
@item
Renamed font and TTF addon functions to conform to conventions.

@item
Added al_init_ttf_addon.

@item
Implemented slightly nicer text drawing API:

@item
functions are called "draw_text" instead of "textout"
@item
centre/right alignment handled by a flag instead of functions
@item
functions accepting ALLEGRO_USTR arguments provided
@item
substring support is removed so 'count' arguments not needed in usual case@comma{} however ALLEGRO_USTR functions provide similar thing.

@item
Removed al_font_is_compatible_font.

@item
Sped up al_grab_font_from_bitmap() by five times.

@item
ttf: Fixed a possible bug with kerning of unicode code points > 127.

@end itemize

Image I/O addon:

@itemize
@item
Renamed everything in the IIO addon.

@item
Exposed al_load_bmp/al_save_bmp etc.

@end itemize

Audio addon:

@itemize
@item
Renamed al_mixer_set_postprocess_callback.

@item
Added two config options to OSS driver.

@item
Made ALSA read config settings from [alsa] section.

@end itemize

Native dialogs:

@itemize
@item
Added al_show_native_message_box() which works like allegro_message() in A4. Implemented for GTK and OS X.
@end itemize

PhysicsFS addon:

@itemize
@item
Added PhysicsFS addon.
@end itemize

Primitives addon:

@itemize
@item
Removed global state flags.

@item
Removed normals from ALLEGRO_VERTEX.

@item
Removed read/write flags from vertex buffers.

@end itemize

Examples:

@itemize
@item
Added an example that tests al_get_display_format_option().

@item
Added an example which shows playing a sample directly to a voice.

@item
Added an example for PhysicsFS addon.

@item
Added a (silly) example that loads an image off the network using libcurl.

@item
Added ex_dir which demonstrates the use of al_readdir and al_get_entry_name.

@end itemize

Other:

@itemize
@item
Many bug and documentation fixes.
@end itemize

@node Changes from 499 to 4991 March 2009
@chapter Changes from 4.9.9 to 4.9.9.1 (March 2009)
@itemize
@item
Made it compile and work with MSVC and MinGW 3.4.5.

@item
Enabled SSE instruction set in MSVC.

@item
Fixed X11 XIM keyboard input (partially?).

@item
Fall back on the reference (software) rasterizer in D3D.

@end itemize

@node Changes from 498 to 499 March 2009
@chapter Changes from 4.9.8 to 4.9.9 (March 2009)
The main developers this time were: Trent Gamblin@comma{} Evert Glebbeek@comma{} Milan Mimica@comma{} Elias Pschernig@comma{} Paul Suntsov@comma{} Peter Wang. Other contributions from: Todd Cope@comma{} Angelo Mottola@comma{} Trezker.

Graphics:

@itemize
@item
Added display options API and scoring@comma{} based on AllegroGL@comma{} for finer control over display creation.

@item
Added API to query possible display formats (implemented on X@comma{} Mac OS X).

@item
Changed the bitmap locking mechanism. The caller can choose a pixel format.

@item
Added support for multisampling.

@item
Simplified the semantics of al_update_display_region().

@item
Optimised software blitting routines.

@item
Optimised al_map_rgb/al_map_rgba.

@item
Replaced al_draw_rectangle() and al_draw_line() from core library with al_draw_rectangle_ex() and al_draw_line_ex() from the primitives addon.

@item
Implemented al_wait_for_vsync() everywhere except WGL.

@item
Fixed problems with sub-bitmaps with the OpenGL driver.

@item
Fixed bugs in software scaled/rotated blit routines.

@item
Added a new pixel format ALLEGRO_PIXEL_FORMAT_ABGR_F32. Removed ALLEGRO_PIXEL_FORMAT_ANY_15_WITH_ALPHA@comma{} ALLEGRO_PIXEL_FORMAT_ANY_24_WITH_ALPHA.

@item
Added support for creating OpenGL 3.0 contexts (untested; only WGL/GLX for now). Relevant display flags are ALLEGRO_OPENGL_3_0 and ALLEGRO_OPENGL_FORWARD_COMPATIBLE.

@item
Allow disabling any OpenGL extensions from allegro.cfg to test alternative rendering paths.

@item
Fixed problem with windows only activating on title bar clicks (Windows).

@item
Fixed a minimize/restore bug in D3D (with the help of Christopher Bludau).

@end itemize

Input:

@itemize
@item
Implemented al_set_mouse_xy under X11.

@item
Added ALLEGRO_EVENT_MOUSE_WARPED event for al_set_mouse_xy().

@end itemize

Path routines:

@itemize
@item
Made al_path_get_drive/filename return the empty string instead of NULL if the drive or filename is missing.

@item
Changed al_path_set_extension/al_path_get_extension to include the leading dot.

@item
Made al_path_get_extension()@comma{} al_path_get_basename()@comma{} al_path_to_string() return pointers to internal strings.

@end itemize

Unicode:

@itemize
@item
Changed type of ALLEGRO_USTR; now you should use pointers to ALLEGRO_USTRs.

@item
Added UTF-16 conversion routines.

@end itemize

Other core:

@itemize
@item
Added ALLEGRO_GET_EVENT_TYPE for constructing integers for event type IDs.

@item
Renamed configuration function names to conform to conventions.

@item
Removed public MIN/MAX/ABS/MID/SGN/CLAMP/TRUE/FALSE macros.

@item
Replaced AL_PI by ALLEGRO_PI and documented it as part of public API.

@end itemize

Audio addons:

@itemize
@item
Added stream seeking and stream start/end loop points.

@item
Add panning support for kcm_audio (stereo only).

@end itemize

Font addons:

@itemize
@item
Made al_font_grab_font_from_bitmap() accept code point ranges.

@item
Made font routines use new UTF-8 routines; lifted some arbitrary limits.

@item
Fixed artefacts in bitmap font and TTF rendering.

@end itemize

Image I/O addon:

@itemize
@item
Made the capability to load/save images from/to ALLEGRO_FS_ENTRYs public.

@item
Added missing locking to .png save function.

@end itemize

Other addons:

@itemize
@item
Added native_dialog addon@comma{} with file selector dialogs.

@item
Fixed many bugs in the primitives addon.

@item
Made hsv/hsl color functions accept angles outside the 0..360° range.

@item
Fixed a bug in al_color_name_to_rgb.

@end itemize

Examples:

@itemize
@item
New programs: ex_audio_props@comma{} ex_blend_bench@comma{} ex_blend_test@comma{} ex_blit@comma{} ex_clip@comma{} ex_draw@comma{} ex_font_justify@comma{} ex_gl_depth@comma{} ex_logo@comma{} ex_multisample@comma{} ex_native_filechooser@comma{} ex_path_test@comma{} ex_rotate@comma{} ex_stream_seek@comma{} ex_vsync@comma{} ex_warp_mouse. (ex_draw demonstrated known bugs currently.)

@item
Updated programs: ex_joystick_events@comma{} ex_monitorinfo ex_pixelformat@comma{} ex_scale@comma{} ex_subbitmap.

@end itemize

Build system:

@itemize
@item
Added pkg-config support. .pc files are generated and installed on Unix.

@item
Allowed gcc to generate SSE instructions on x86 by default. For Pentium 2 (or lower) compatibility you must uncheck a CMake option before building Allegro.

@end itemize

Other:

@itemize
@item
Many other bug fixes.
@end itemize

@node Changes from 4971 to 498 February 2009
@chapter Changes from 4.9.7.1 to 4.9.8 (February 2009)
The main developers this time were: Thomas Fjellstrom@comma{} Trent Gamblin@comma{} Evert Glebbeek@comma{} Matthew Leverton@comma{} Milan Mimica@comma{} Elias Pschernig@comma{} Paul Suntsov@comma{} Peter Wang.

General:

@itemize
@item
Lots of bug fixes.
@end itemize

File system hooks:

@itemize
@item
Rationalised file system hook functions. Failure reasons can be retrieved with al_get_errno().

@item
Enable large file support on 32-bit systems.

@item
Converted the library and addons to use file system hook functions.

@end itemize

Path functions:

@itemize
@item
Added al_path_clone()@comma{} al_path_make_canonical()@comma{} al_path_make_absolute()@comma{} al_path_set_extension()@comma{} al_@{get@comma{}set@}_org_name@comma{} al_@{get@comma{}set@}_app_name@} functions.

@item
Made al_path_get_extension() not include the leading "." of the extension@comma{}

@item
Add AL_EXENAME_PATH@comma{} AL_USER_SETTINGS_PATH@comma{} AL_SYSTEM_SETTINGS_PATH enums for al_get_path().

@end itemize

String routines:

@itemize
@item
Added a new@comma{} dynamically allocating UTF-8 string API. This uses bstrlib internally@comma{} which is distributed under a BSD licence. Allegro 5 will expect all strings to be either ASCII compatible@comma{} or in UTF-8 encoding.

@item
Removed many old Unicode string functions. (Eventually they will all be removed.)

@end itemize

Config routines:

@itemize
@item
Clarified behaviour of al_config_add_comment@comma{} al_config_set_value with regards to whitespace and leading comment marks.
@end itemize

Graphics:

@itemize
@item
Bug fixes on Windows and Mac OS X for resizing@comma{} switching away@comma{} setting full screens@comma{} multi-monitor@comma{} etc.

@item
Added an al_get_opengl_texture() convenience function.

@item
Added separate alpha blending.

@item
Added ALLEGRO_PIXEL_FORMAT_ANY.

@item
Honour al_set_new_window_position() in X11 port.

@item
Made the X11 port fail to set a full screen mode if the requested resolution cannot be set rather than falling back to a windowed mode.

@end itemize

Input:

@itemize
@item
Added a field to the mouse state struct to indicate the display the mouse is currently on.

@item
Made DirectX enumerate all joysticks/gamepads properly by using a device type new to DirectInput 8.

@item
Fixed a bug in wmouse.c where y was not changed in al_set_mouse_xy.

@item
Support ALLEGRO_EVENT_MOUSE_ENTER/LEAVE_DISPLAY events in Windows.

@end itemize

Addons:

@itemize
@item
Added a primitives addon.

@item
Revamp interface for kcm_audio addon to make simple cases easier.

@item
Added native .wav support and save sample routines to acodec addon.

@item
Added a colors addon.

@item
Added memory file addon and example.

@end itemize

TTF addon:

@itemize
@item
Added al_ttf_get_text_dimensions() function.

@item
Allow specifying the font size more precisely by passing a negative font size.

@item
Guess the filenames of kerning info for Type1 fonts.

@end itemize

Documentation:

@itemize
@item
Added a new documentation system using Pandoc. Now we can generate HTML@comma{} man@comma{} Info and PDF formats.

@item
Added and fixed lots of documentation.

@end itemize

Examples:

@itemize
@item
Added ex_prim@comma{} ex_mouse_focus examples.

@item
Made ex_blend2 more comprehensive.

@item
Updated ex_get_path example.

@item
Made ex_ttf accept the TTF file name on the command line.

@end itemize

Build system:

@itemize
@item
Use official CMAKE_BUILD_TYPE method of selecting which build configuration. This should work better for non-make builds@comma{} however@comma{} it's no longer possible to build multiple configurations with a single configuration step as we could previously.
@end itemize

Removals:

@itemize
@item
Remove outdated A4 tools.

@item
Remove icodec addon.

@item
SCons build was unmaintained and not working.

@end itemize

@node Changes from 497 to 4971 December 2008
@chapter Changes from 4.9.7 to 4.9.7.1 (December 2008)
@itemize
@item
Scan aintern_dtor.h for export symbols@comma{} needed for MSVC.
@end itemize

@node Changes from 496 to 497 December 2008
@chapter Changes from 4.9.6 to 4.9.7 (December 2008)
The main developers this time were: Trent Gamblin@comma{} Evert Glebbeek@comma{} Peter Hull@comma{} Milan Mimica@comma{} Peter Wang.

Graphics:

@itemize
@item
Fixed a bug where the "display" field of a bitmap was not correctly reset when it was transfered to another display on OS X.

@item
Made al_create_display() respect al_set_new_window_position() on OS X.

@item
Fixed the bug that caused input focus to be lost in OS X when a window was resized.

@item
Made resizable Allegro windows respond properly to the green "+" button at the top of the screen on OS X.

@item
Properly implemented fullscreen resize in WGL.

@item
Made the memory blenders work the same as the hardware ones.

@item
Made al_get_pixel()/al_draw_pixel() handle sub bitmaps in case the bitmap was locked.

@item
In the OpenGL driver@comma{} if the bitmap is locked by the user@comma{} use memory drawing on the locked region.

@item
Added implementations of al_inhibit_screensaver() for the X and Mac OS X ports.

@item
Added multi-monitor support to Mac OS X port (untested!).

@item
Other fixes.

@end itemize

Input:

@itemize
@item
Made al_get_keyboard_state() return structures with the `display' field correctly set.

@item
Made keyboard event member 'unichar' uppercase when Shift/CapsLock is on@comma{} in Windows.

@item
Made mouse cursor show/hide work with Mac OS X full screen.

@end itemize

Config routines:

@itemize
@item
Preserve comment and empty lines in config files when writing.
@end itemize

Addons:

@itemize
@item
Add a simple interface layer for kcm_audio.

@item
Made kcm_audio objects automatically be destroyed when it is shut down.

@item
Renamed functions in kcm_audio to conform better with the rest of the library.

@item
Made the TTF addon aggregate glyph cache bitmaps into larger bitmaps for faster glyph rendering (less source bitmap switching).

@end itemize

Examples:

@itemize
@item
Add an example to test the ALLEGRO_KEYBOARD_STATE `display' field.

@item
Add an example for testing config routines.

@item
Add an example for checking software blending routines against hardware blending.

@item
Add an example for the simple interface for kcm_audio.

@end itemize

@node Changes from 495 to 496 November 2008
@chapter Changes from 4.9.5 to 4.9.6 (November 2008)
The core developers this time were: Thomas Fjellstrom@comma{} Trent Gamblin@comma{} Evert Glebbeek@comma{} Peter Hull@comma{} Milan Mimica@comma{} Jon Rafkind@comma{} Peter Wang.

Allegro 4.9.6 and onwards are licensed under the zlib licence (see LICENSE.txt). This is a simple permissive free software licence@comma{} close in spirit to the 'giftware' licence@comma{} but is clearer and more well-known.

General:

@itemize
@item
Added filesystem hook (fshook) and path API functions.

@item
Many minor bug fixes.

@end itemize

Graphics:

@itemize
@item
Added allegro5/a5_opengl.h@comma{} which has to be included by programs to use OpenGL specifics. ALLEGRO_EXCLUDE_GLX and ALLEGRO_EXCLUDE_WGL can be #defined to exclude GLX and WGL OpenGL extensions respectively.

@item
Added allegro/a5_direct3d.h@comma{} which has to be included by programs to use D3D specifics.

@item
Fixed some drawing from and onto sub-bitmaps.

@item
Fixed blending with the wrong color in case of sub-bitmaps.

@item
Fixed a bug in the D3D driver where the transformation matrix was not reset after drawing a bitmap.

@item
Added draw pixel to OpenGL driver.

@item
Added more OpenGL extensions.

@item
Added function to inhibit screen saver (currently Windows only).

@end itemize

Config routines:

@itemize
@item
Added al_config_create().

@item
Deleted al_config_set_global(). Made empty section name equivalent to the global section.

@item
Read system wide and home directory config files on Unix (Ryan Patterson).

@end itemize

Events:

@itemize
@item
Added support for injecting user-defined events into event queues.
@end itemize

Audio addon:

@itemize
@item
Made the ALSA driver read the device name from the config file (Ryan Patterson).
@end itemize

Examples:

@itemize
@item
Added ex_subbitmap example.

@item
Added ex_disable_screensaver example.

@end itemize

Build system:

@itemize
@item
Rationalised library names and made CMake and SCons build systems agree on the names.
@end itemize

@node Changes from 494 to 495 October 2008
@chapter Changes from 4.9.4 to 4.9.5 (October 2008)
The core developers this time were: Trent Gamblin@comma{} Evert Glebbeek@comma{} Peter Hull@comma{} Milan Mimica@comma{} Elias Pschernig@comma{} Jon Rafkind@comma{} Peter Wang.

Graphics:

@itemize
@item
Added fullscreen support on Mac OS X.

@item
Added support for resizable windows on Mac OS X.

@item
Made frameless windows respond to events on Mac OS X.

@item
Fixed a problem with D3D blending.

@item
Made D3D driver work on systems without hardware vertex processing.

@item
Made WGL driver fail more gracefully.

@item
Implemented sprite flipping for OpenGL drivers (Steven Wallace).

@item
Added al_is_sub_bitmap() function.

@end itemize

Input:

@itemize
@item
Fixed input with multiple windows on Windows.

@item
Fixed keyboard autorepeat events in X11.

@item
Added al_is_keyboard_installed().

@item
Fixed key shifts on Windows (ported from 4.2).

@item
Fixed mouse button reporting on Mac OS X.

@item
Implemented system mouse cursors on MacOS X.

@item
Fixed mouse cursors with alpha channels on X11.

@item
Some work on Mac OS X joystick support (incomplete).

@end itemize

Events:

@itemize
@item
Simplified internals of events system further. At the same time@comma{} this change happens to also allow event queues to grow unboundedly. (You should still avoid letting them get too big@comma{} of course.)
@end itemize

Audio addons:

@itemize
@item
Made ALLEGRO_STREAM objects emit events for empty fragments that need to be refilled.

@item
Added a possiblity to drain a stream created by al_stream_from_file().

@item
Added a function to rewind a stream.

@item
Added gain support to ALLEGRO_STREAM and ALLEGRO_SAMPLE objects.

@item
Made it possible to attach a sample to a mixer that isn't already attached to something.

@item
Fixed Ogg Vorbis loader on big-endian systems.

@item
Made the OpenAL driver the least preferred driver@comma{} as it doesn't play stereo samples properly.

@end itemize

Image addons:

@itemize
@item
Added JPEG support to iio addon@comma{} using libjpeg.

@item
Fixed TGA loader on big-endian systems.

@item
Fixed image loading in icodec addon.

@end itemize

Font addon:

@itemize
@item
Fixed count-restricted text output functions calculations on non-ASCII strings.

@item
Made al_textout* functions always a 'count' parameter.

@item
Renamed al_font_text_length* to al_font_text_width*.

@item
Harmonised the order of al_font_textout* and al_font_textprintf* arguments.

@end itemize

Examples:

@itemize
@item
Added ex_bitmap_flip example (Steven Wallace).

@item
Added ex_mixer_chain example.

@item
Split ex_events into smaller examples.

@item
Made the demo use ALLEGRO_STREAM to play music.

@item
Build an app bundle from the demo@comma{} on Mac OS X.

@end itemize

Build system:

@itemize
@item
Improved detection of external dependencies in CMake build.

@item
Guess compiler locations for MinGW and MSVC (CMake).

@item
Many improvements to scons build@comma{} including install support.

@end itemize

General:

@itemize
@item
Many other bug fixes.
@end itemize

@node Changes from 493 to 494 September 2008
@chapter Changes from 4.9.3 to 4.9.4 (September 2008)
The core developers this time were: Trent Gamblin@comma{} Peter Hull@comma{} Milan Mimica@comma{} Elias Pschernig and Peter Wang. Ryan Dickie and Jon Rafkind also contributed.

General:

@itemize
@item
Many bug fixes all around.

@item
Added a public threads API.

@item
Added a basic configuration API.

@item
Added al_store_state/al_restore_state functions.

@item
Added al_get_errno/al_set_errno (not used much yet).

@item
Renamed some functions/structures to be more consistent.

@item
Code formatting improvements.

@item
Added more debugging messages.

@item
Removed a lot of A4 code that is no longer used.

@end itemize

Graphics:

@itemize
@item
Added support for some new OpenGL extensions.

@item
Multihead support on Windows (preliminary support on OSX and Linux).

@item
Many enhancements to all drivers.

@item
Merged common parts of WGL and D3D drivers.

@item
Borderless windows@comma{} setting window positions and titles.

@item
Fullscreen support on OSX and Linux.

@item
Do not clear bitmaps when they are created.

@item
Improved compile times and DLL sizes by simplifying "memblit" functions.

@item
Added EXPOSE@comma{} SWITCH_IN and SWITCH_OUT display events.

@end itemize

Build system:

@itemize
@item
Many bug fixes and enhancements to SCons and CMake build systems.

@item
Support for Turbo C++ 2006.

@item
Support for cross-compiling on Linux to MinGW (CMake).

@end itemize

Events:

@itemize
@item
Filled in a display field for all relevant events.

@item
Added al_wait_for_event_until.

@end itemize

Addons:

@itemize
@item
Added an ImageMagick addon

@item
Added iio (Image IO) addon

@itemize
@item
Supports BMP@comma{} PCX@comma{} TGA.

@item
Supports PNG support with libpng.

@end itemize

@item
Added new audio addon@comma{} kcm_audio. (The 'audio' addon was taken in a new direction between the 4.9.3 and 4.9.4 releases@comma{} but we decided against that@comma{} so actually it's actually a continuation of the old audio addon.)

@itemize
@item
Added audio streaming functionality.

@item
Added OSS@comma{} ALSA@comma{} DirectSound drivers.

@item
A lot of reorganisation@comma{} internally and externally.

@end itemize

@item
Added TTF font addon@comma{} using FreeType.

@item
Made all addons use "al_" prefix.

@end itemize

Examples:

@itemize
@item
Lots of new examples.

@item
Wait for keypress in some examples instead of arbitrary delay.

@item
Clean up files when done in some examples.

@end itemize

@node Changes from 492 to 493 April 2008
@chapter Changes from 4.9.2 to 4.9.3 (April 2008)
Graphics:

@itemize
@item
Milan Mimica did lots of work on the OpenGL drivers@comma{} such as adding an OpenGL driver for Windows and making the OpenGL code shared between platforms.

@item
Peter Hull added an OpenGL graphics driver for Mac OS X.

@item
Milan Mimica made the OpenGL driver share contexts between displays.

@item
Peter Wang and Milan Mimica made the OpenGL driver work with cards that don't support non-power-of-two (NPOT) textures.

@item
Trent Gamblin added support for NPOT textures in the Direct3D driver.

@item
Trent Gamblin fixed blending in memory drawing functions.

@item
Trent Gamblin added al_draw_pixel() which obeys blending.

@item
Trent Gamblin made al_clear() not affected by blending in D3D.

@item
Milan Mimica added the following functions to the public API: al_opengl_version()@comma{} al_is_opengl_extension_supported()@comma{} al_get_opengl_proc_address()@comma{} al_get_opengl_extension_list().

@item
Milan Mimica added sub-bitmaps support for memory bitmaps and in the OpenGL display driver.

@item
Milan Mimica made displays keep a list of bitmaps. When destroying a display its bitmaps will be managed properly@comma{} e.g. converted to memory bitmaps if necessary. All display bitmaps will be automatically destroyed on exit.

@item
Peter Wang made X window resizing work without GLX 1.3.

@item
Trent Gamblin fixed a bug in the Direct3D driver when windows were minimized (thanks to David McCallum).

@item
Trent Gamblin fixed the coordinates of Direct3D primitives to match OpenGL style.

@item
Peter Hull fixed some logic in bitmap drawing and al_load_bitmap().

@end itemize

Fonts:

@itemize
@item
Milan Mimica made font drawing faster@comma{} by making glyphs sub-bitmaps of a larger glyph sheet.

@item
Milan Mimica and Peter Wang made font loading faster.

@item
Trent Gamblin added versions of text output functions which take as an explicit argument the length of the strings.

@end itemize

Audio:

@itemize
@item
A new audio API implementation@comma{} originally by Chris Robinson@comma{} was added (currently as an addon only). It has received additional work in the past from Milan Mimica and recently much work from Ryan Dickie.

@item
Ryan Dickie also added an acodec addon@comma{} which has loaders for FLAC@comma{} Wave and Ogg Vorbis files@comma{} using other libraries.

@end itemize

Timers:

@itemize
@item
Ryan Dickie changed the type of timestamps throughout the API from int expressed in milliseconds to double expressed in seconds and improved timer resolution on Windows.

@item
Ryan Dickie added an 'error' field to the timer event@comma{} and added error and overhead statistics to exnew_timer.

@item
Trent Gamblin made the Windows timer use QueryPerformanceCounter.

@item
Peter Wang split al_wait_for_event() into two functions@comma{} a version that takes a timeout and a version that doesn't.

@item
Trent Gamblin merged the Windows and Unix timer source files.

@end itemize

Input:

@itemize
@item
Peter Wang renamed some joystick and timer functions to adhere to the @code{al_<verb>_<noun>} convention.

@item
Peter Wang made al_num_joysticks() more lenient if there is no joystick driver installed.

@end itemize

Other:

@itemize
@item
David Capello added support for various different BMPs.

@item
Elias Pschernig fixed compilation of the X port in case the XVidMode extension is unavailable (thanks to Thomas Fjellstrom).

@item
Elias Pschernig added a exnew_timer example.

@item
Trent Gamblin added exnew_multiwin and exnew_drawpixels.

@item
Peter Wang added exnew_timedwait and exnew_scale.

@item
Jon Rafkind and Elias Pschernig updated the SCons build.

@item
Jon Rafkind added a @code{_s} suffix to static libraries in the SCons build.

@item
Elias Pschernig did some work on cross-compilation with SCons and MinGW.

@item
Milan Mimica made the CMake build work with MSVC project solutions and made the library build with MSVC 8.

@item
Jacod Dawid added a nicer spaceship graphic for a5teroids demo.

@item
Many more bug fixes and documentation updates.

@end itemize

@node Changes from 491 to 492 November 2007
@chapter Changes from 4.9.1 to 4.9.2 (November 2007)
@emph{This list is still to be summarised.}

@itemize
@item
Trent Gamblin made the mouse cursor always hide when the user calls al_hide_mouse_cursor in fullscreen (D3D).

@item
Trent Gamblin fixed some signedness warnings and implemented show/hide_mouse in the display vtable for D3D.

@item
Elias Pschernig made show/hide cursor use the display driver instead of the 4.2 gfx_driver.

@item
Elias Pschernig fixed missing keyboard events in exnew_mouse_events example.

@item
Elias Pschernig wired the X11 mouse driver to the XGLX system driver.

@item
Jon Rafkind made various fixes to get the OSX build to compile

@item
Trent Gamblin added exnew_mouse_events.

@item
Trent Gamblin added exnew_mouse.

@item
Jon Rafkind made the scons build get the library name dynamically.

@item
Jon Rafkind made the scons build link Allegro using -l instead of using the full path.

@item
Trent Gamblin added a note about MINGDIR in readme_a5.txt.

@item
Trent Gamblin removed -lalleg_unsharable from allegro-config.in@comma{} since assembly is not used anymore.

@item
Jon Rafkind fixed up allegro-config.

@item
Trent Gamblin added some documentation on ALLEGRO_MSESTATE.

@item
Trent Gamblin listed the examples in readme_a5.txt.

@item
Trent Gamblin improved some inline documentation.

@item
Jon Rafkind removed /lib from install path in unix.scons.

@item
Jon Rafkind added the new demo to the scons build and allowed addons to be built statically or shared.

@item
Trent Gamblin made the glx line drawing function use blending.

@item
Trent Gamblin added cmake instructions to readme_a5.txt.

@item
Elias Pschernig added readme_a5.txt.

@item
Trent Gamblin fixed warnings in the demo.

@item
Trent Gamblin fixed a crash-on-exit bug in tls.c.

@item
Trent Gamblin replaced the old demo with a temporary one.

@item
Peter Wang fixed gcc string warnings.

@item
Peter Wang added some assertions to display_new.c.

@item
Peter Wang merged changes from the 4.2 branch.

@item
Elias Pschernig removed an unnecessary import from the naturaldocs upload script.

@item
Elias Pschernig added a script to automatically upload the naturaldocs generated documentation to the website.

@item
Peter Wang fixed missed renamings from AL_ to ALLEGRO_ in the Linux and X code.

@item
Elias Pschernig merged 4.9-newgfx back to 4.9.

@item
Peter Wang fixed a "ALLEGRO__JOYSTICK" typo.

@item
Trent Gamblin renamed AL_ to ALLEGRO_ in input@comma{} events@comma{} and timer code.

@item
Elias Pschernig implemented outline flag and blending for draw_rectangle in the GLX driver.

@item
Elias Pschernig added another mysha.pcx for the font example.

@item
Elias Pschernig re-added GLX checked to scons build which went missing in the merge.

@item
Elias Pschernig added icon.xpm which went missing in the merge.

@item
Peter Wang replaced _al_draw_bitmap_region_memory_fast with _al_draw_bitmap_region_memory.

@item
Trent Gamblin made memblit.c compile a little faster in debug mode.

@item
Peter Wang mergedd changes in r7948:10859 on 4.9 branch to 4.9-newgfx branch.

@item
Peter Wang enabled WANT_D3D by default. Only set ALLEGRO_D3D on Windows.

@item
Trent Gamblin made al_acknowledge_resize take the display as a parameter.

@item
Trent Gamblin fixed some warnings and made the MinGW build compilable statically with gcc 4.2.1.

@item
Peter Wang fixed a bug in ALLEGRO_CONVERT_BGR_565_TO_ARGB_4444.

@item
Peter Wang renamed al_memory_management_functions() to al_set_memory_management_functions() and added some extra documenation for it.

@item
Peter Wang removed NaturalDocs markup for Allegro 4.x display functions.

@item
Peter Wang made OpenGL libraries link if building with X11 support.

@item
Peter Wang fixed a signedness warning.

@item
Peter Wang made al_destroy_bitmap return immediately when passed a null pointer instead of segfaulting.

@item
Elias Pschernig made some cosmetic improvements to the code.

@item
Elias Pschernig removed a bad optimization.

@item
Elias Pschernig removed > GLX 1.1 specific code.

@item
Trent Gamblin fixed several of the floating point unmapping functions that were doing integer division.

@item
Elias Pschernig implemented blending in the GLX driver.

@item
Elias Pschernig fixed GLX rotation to use radians and allow negative angles.

@item
Elias Pschernig implemented rotated blitting in the GLX driver.

@item
Jon Rafkind made scons install addons/font.

@item
Jon Rafkind added a scons file for addons.

@item
Jon Rafkind used target_scanner to find makedoc instead of using Depends.

@item
Jon Rafkind forced makedoc to be a dependancy of the docs.

@item
Trent Gamblin made 60hz the default refresh rate of the D3D driver.

@item
Trent Gamblin changed al_create_mouse_cursor to accept ALLEGRO_BITMAP structures.

@item
Trent Gamblin renamed __al_unmap_rgba to al_unmap_rgba_ex in the glx driver.

@item
Trent Gamblin made al@emph{(map|unmap)}rgb(a)@emph{*}ex public.

@item
Trent Gamblin made D3D windows show the resize cursor when resizing windows.

@item
Jon Rafkind added allegro includes for asmdef.

@item
Jon Rafkind erased older build demo target.

@item
Jon Rafkind added the demo to the scons build.

@item
Jon Rafkind made it so assembly files can be built statically.

@item
Jon Rafkind made scons always build asmdef.

@item
Trent Gamblin made al_acknowledge_resize and al_resize_display adjust clipping in the D3D driver. Mad eal_set_current_display

@item
Trent Gamblin used higher compatibility flags to Direct3DCreate9@comma{} made D3D driver die more gracefully on unsupported configurations@comma{} removed flags from draw_line@comma{} and did more error checking.

@item
Trent Gamblin turned al_init macros into an inline function.

@item
Trent Gamblin commented out a TRACE line that was causing the entire log to be overwritten.

@item
Peter Wang fixed an incorrect call to _al_vector_find_and_delete.

@item
Peter Wang made various formatting fixes.

@item
Peter Wang converted CR/LF line endings to LF.

@item
Trent Gamblin added NaturalDocs for the graphics api.

@item
Trent Gamblin fixed an instance where a variable could have been used uninitialized.

@item
Trent Gamblin fixed texture coordinates in the D3D driver.

@item
Trent Gamblin fixed formatting and an improper assertion.

@item
Trent Gamblin removed a redundant call to al_set_target_bitmap.

@item
Trent Gamblin fixed a bug in the DX joystick code that caused it to assert when it shouldn't.

@item
Trent Gamblin made al_create_display call al_flip_display so the window is cleared.

@item
Trent Gamblin made the D3D driver work where render-to-texture is not supported.

@item
Trent Gamblin removed masking support completely.

@item
Elias Pschernig got the font example working with the GLX driver.

@item
Elias Pschernig renamed the font addon in the scons build.

@item
Jon Rafkind made scons build modules in a separate directory.

@item
Jon Rafkind bumped the version to match cmake.

@item
Jon Rafkind fixed esd to be like the other unix modules.

@item
Trent Gamblin changed color map and unmap functions to use the target bitmap.

@item
Trent Gamblin added the font example to the cmake build process.

@item
Elias Pschernig added the font example to the scons build process.

@item
Elias Pschernig removed special handling of "src" dir@comma{} and made various cosmetic changes.

@item
Trent Gamblin made cmake install to MINGDIR.

@item
Trent Gamblin added a better font and example for the bitmap font addon.

@item
Trent Gamblin removed unix header from install on other platforms.

@item
Trent Gamblin added a bitmap font addon.

@item
Trent Gamblin fixed a locking bug in the D3D driver.

@item
Elias Pschernig removed masking from the GLX driver.

@item
Trent Gamblin implemented blending for memory bitmaps (very slow unless the blend mode is ALLEGRO_ONE@comma{}ALLEGRO_ZERO with a pure white blend color).

@item
Trent Gamblin implemented blending for the D3D driver.

@item
Trent Gamblin added ALLEGRO_PIXEL_FORMAT_ANY@emph{(15|16|24|32)}(WITH_ALPHA|NO_ALPHA) formats@comma{} used ALLEGRO_PIXEL_FORMAT_ANY_32_NO_ALPHA in locking examples@comma{} and ixed some formatting.

@item
Trent Gamblin added al_clone_bitmap which makes an exact copy of the color-data of a bitmap.

@item
Trent Gamblin added a ALLEGRO_KEEP_BITMAP_FORMAT flag that forces Allegro to use the same format as the disk file when loading bitmaps.

@item
Elias Pschernig implemented video bitmap masking for the GLX driver (by converting to alpha textures and drawing with alpha blending).

@item
Elias Pschernig fixed clipping in the GLX driver.

@item
Trent Gamblin removed ALLEGRO_MASK_SOURCE flag in favor of ALLEGRO_USE_MASKING. Mask color is now a bitmap property. Removed ALLEGRO_NO_ALPHA flag and changed the meaning of ALLEGRO_USE_ALPHA to mean do alpha blending or not. Added al_set/get_bitmap_mask_color and removed al_set/get_mask_color. New masking example added (exnew_masking).

@item
Trent Gamblin added proper clipping to al_put_pixel.

@item
Trent Gamblin renamed graphics stuff from AL_ to ALLEGRO_ and removed patterned drawing.

@item
Elias Pschernig implemented clipping for the X11 GLX driver (only for screen so far).

@item
Trent Gamblin removed unused set_bitmap_clip entry from the bitmap vtable.

@item
Trent Gamblin made clipping always enabled and made the clipping functions operate on the current target bitamp.

@item
Trent Gamblin removed src/compat/coblit.c.

@item
Trent Gamblin renamed scroll_display to scroll_screen in display.c

@item
Trent Gamblin Removed commented code from src/display.c. Removed include/allegro/display.h and src/compat/cogfx.c

@item
Elias Pschernig renamed XDUMMY driver to XGLX.

@item
Elias Pschernig made some cosmetic changes.

@item
Elias Pschernig made exblend work over the compatibility screen.

@item
Elias Pschernig implemented upload_compat_screen method in the GLX driver.

@item
Elias Pschernig optimized al_lock_bitmap/al_unlock_bitmap slightly.

@item
Elias Pschernig added a flags parameter to the drawing primitives methods.

@item
Trent Gamblin added flags to primitives in display vtable and renamed draw_filled_rectangle vtable entry to draw_rectangle.

@item
Elias Pschernig implemented AL_SINGLEBUFFER flag and fixed bug with AL_FULLSCREEN in the GLX driver.

@item
Trent Gamblin added a mode parameter to al_set_drawing_pattern.

@item
Trent Gamblin added AL_OUTLINED flag that is the default for primitives.

@item
Trent Gamblin added al_set_drawing_pattern and al_get_drawing_pattern@comma{} added a flags parameters to all the primitive drawing functions that can be: AL_FILLED@comma{} AL_PATTERNED@comma{} and added hline and vline functions for memory bitmaps.

@item
Trent Gamblin ifdefed d3d stuff in win/wnewsys.c.

@item
Trent Gamblin removed d3dx9 library from CMakeLists.txt.

@item
Trent Gamblin ifdefed Direct3D stuff in display.c.

@item
Jon Rafkind made scons read win32 files from cmake file list.

@item
Trent Gamblin added al_wait_for_vsync and made it work with the D3D driver.

@item
Elias Pschernig implemented immediate-resize for al_resize_display@comma{} and implemented fullscreen resizing.

@item
Trent Gamblin added al_enable_bitmap_clip and al_is_bitmap_clip_enabled@comma{} added al_create_sub_bitmap@comma{} and made it work with D3D and memory bitmaps.

@item
Elias Pschernig improved fullscreen handling.

@item
Elias Pschernig added shutdown_system vtable entry to the system driver@comma{} and automatically call it on program exit. This allows unsetting fullscreen modes in the X11 driver.

@item
Trent Gamblin added al_set_bitmap_clip and al_get_bitmap_clip@comma{} and made them work with D3D and memory bitmaps.

@item
Elias Pschernig added XF86Vidmode fullscreen modes.

@item
Elias Pschernig added xdummy files to cmake files list.

@item
Elias Pschernig made al_resize_display work on non-resizable windows.

@item
Elias Pschernig fixed opengl setup being issued in wrong thread.

@item
Elias Pschernig moved src/misc/colconv.c from windows sources to general sources.

@item
Elias Pschernig uncommented accidentally commented out line.

@item
Elias Pschernig made scons read the list of source files from cmake/FileList.cmake@comma{} so there's only one place to add new files.

@item
Trent Gamblin made _al_get_pixel_value faster.

@item
Trent Gamblin made al_unmap_rgba_i use a table instead of relying on al_unmap_rgba_f.

@item
Peter Wang changed #includes to use file names from the root of the include hierarchy@comma{} i.e. #include "allegro/internal/foo.h" instead of #include "internal/foo.h" and likewise for allegro/platform/foo.h.

@item
Peter Wang removed some stray CR characters.

@item
Trent Gamblin added al_get_bitmap_width@comma{} al_get_bitmap_height@comma{} al_get_bitmap_format@comma{} and al_get_bitmap_flags.

@item
Trent Gamblin made al_draw_rotated@emph{(scaled})bitmap only lock the region of the destination is needs to for memory bitmaps.

@item
Trent Gamblin made al_draw_scaled_bitmap use the AL_FLIP_* flags.

@item
Trent Gamblin added an example of resizing a fullscreen display.

@item
Elias Pschernig updated xdummy driver and implemented al_resize_display for it.

@item
Elias Pschernig added another testcase.

@item
Trent Gamblin added al_get_display_width and al_get_display_height@comma{} made al_get_display_* work on the current display@comma{} and renamed al_notify_resize to al_acknowledge_resize.

@item
Trent Gamblin uncommented everything in cogfx.c (removing the display parameter).

@item
Trent Gamblin made exnew_lockscreen use pitch.

@item
Trent Gamblin fixed scaled conversion macros (4444@comma{} 555@comma{} 565)@comma{} added XRGB_8888 pixel format@comma{} made windowed mode default@comma{} moved get_num_display_modes and get_display_mode into the system vtable.

@item
Trent Gamblin made exnew_lockbitmap use pitch.

@item
Trent Gamblin fixed D3D unlocking bug@comma{} and used desktop format in windowed mode if not specified.

@item
Elias Pschernig fixed a bug where events reported the wrong source display under X11.

@item
Elias Pschernig added three simple test cases.

@item
Elias Pschernig fixed al_lock_bitmap and al_unlock_bitmap implementation in the xdummy driver (for now it works in a slow way).

@item
Trent Gamblin made al_notify_resize return success/failure and added al_resize_display to resize the display from code.

@item
Elias Pschernig started implementing lock_region and unlock_region for the xdummy driver.

@item
Elias Pschernig split xdraw.c out of xdisplay.c@comma{} used _AL_THREAD instead of pthreads in the xdummy driver@comma{} added a lock to the xdummy driver@comma{} in order to implement al_destroy_display@comma{} used the correct format.

@item
Elias Pschernig fixed a comment typo.

@item
Elias Pschernig fixed a typo in AL_CONVERT_PALETTE_8_TO_ABGR_8888.

@item
Trent Gamblin improved D3D line drawing@comma{} added al_get_num_display_modes and al_get_display_mode@comma{} and cleaned up & organized some code.

@item
Trent Gamblin removed _al_win_delete_from_vector.

@item
Trent Gamblin added draw_memory_bitmap_region vtable hook to AL_DISPLAY.

@item
Elias Pschernig implemented enough of the xdummy driver to run exnewap (doesn't display correctly yet though).

@item
Elias Pschernig updated scons build files.

@item
Elias Pschernig Removed windows specific includes from exnewapi.c.

@item
Elias Pschernig added missing al_convert_mask_to_alpha prototype.

@item
Peter Wang fixed src/tls.c to compile under Linux (not tested).

@item
Trent Gamblin put TLS support back in for MSVC and UNIX.

@item
Trent Gamblin cleaned up some code@comma{} added headers to new source files@comma{} grouped thread local variables into one structure (UNIX support is broken for now)@comma{} and made mask color thread local.

@item
Trent Gamblin added clear@comma{} filled rectangle@comma{} and line for memory bitmaps.

@item
Trent Gamblin made it so the system driver is no longer hard coded@comma{} added switch_out method to display vtable@comma{} made the D3D window and system driver code generic.

@item
Trent Gamblin merged 4.9-elias and 4.9-trentg into 4.9-newgfx.

@item
Elias Pschernig adjusted prototype of _al_init to implementation.

@item
Elias Pschernig fixed a bogus cast.

@item
Elias Pschernig fixed typo in al_get_new_diplay_format for non-mingw.

@item
Trent Gamblin made display and bitmap parameters local to the calling thread.

@item
Trent Gamblin added al_draw_rotated_bitmap and al_draw_rotated_scaled_bitmap for memory bitmaps using Allegro's software rotation code as a base.

@item
Trent Gamblin ported a stretch blit fix from 4.2@comma{} made al_init call allegro_init@comma{} made al_draw_bitmap(_region) much faster on memory bitmaps@comma{} and added al_draw_scaled_bitmap for memory bitmaps.

@item
Trent Gamblin renamed AL_LOCKED_RECTANGLE to AL_LOCKED_REGION@comma{} and started on memory bitmaps (al_draw_bitmap and al_draw_bitmap region work).

@item
Trent Gamblin made seperate functions for getting/setting display/bitmap parameters@comma{} made backbuffer-as-source bitmap work in D3D@comma{} and changed parameter ordering of some functions.

@item
Trent Gamblin added al_is_compatible_bitmap removed dependancy on Allegro's 3D math functions from the D3D driver.

@item
Trent Gamblin added al_convert_mask_to_alpha@comma{} made put/get_pixel faster if the bitmap is locked ahead of time@comma{} and brought back AL_MASK_SOURCE.

@item
Trent Gamblin committed various bugfixes@comma{} implemented the RGB mapping/unmapping functions from Bob's API.

@item
Trent Gamblin removed the D3DX library dependancy.

@item
Trent Gamblin committed various bugfixes and got all of the examples working with the D3D driver.

@item
Trent Gamblin fixed some of the compatibility conversions.

@item
Trent Gamblin changed the examples back to autodetecting the graphics driver.

@item
Trent Gamblin made fullscreen mode work with the D3D driver@comma{} and non-resizable windows.

@item
Trent Gamblin finished bitmap conversion functions@comma{} improved locking@comma{} implemented get/put pixel@comma{} and made some speed improvements.

@item
Trent Gamblin added a bitmap conversion function.

@item
Trent Gamblin got the demo game running in D3D.

@item
Trent Gamblin removed an unnecessary bitmap copy.

@item
Trent Gamblin added a skeleton D3D driver.

@item
Peter Wang fixed the generation of allegro-config under Mac OS.

@item
Michael Jensen fixed a mistake in the documenation for is_compatible_font.

@item
Peter Wang fixed wrong variable in example code for load_font();

@item
Trent Gamblin fixed some problems with the cmake build on Windows.

@item
Peter Wang removed the second parameter in a call to _al_event_source_needs_to_generate_event() which was missed earlier.

@item
Peter Wang exposed some internal documentation on destructors@comma{} events and event sources to NaturalDocs.

@item
Peter Wang changed al_wait_for_event() so that a timeout value of "0" means to not wait at all. To wait an indefinite amount of time the caller should pass the AL_WAIT_FOREVER constant.

@item
Peter Wang removed the declarations of al_event_source_set_mask and al_event_source_mask which were missed in the previous change.

@item
Peter Wang removed event masking abilities@comma{} that is@comma{} for the user to prevent an event source from generating particular event types. This was implemented using bitfields which limited the number of event types to 32. Although the limit could be raised event masking was probably not very useful anyway. In all@comma{} the functions removed are: al_event_source_mask@comma{} al_event_source_set_mask@comma{} al_wait_for_specific_event. The al_wait_for_specific_event() API also required event types to be bitfields.

@item
Peter Wang fixed some spelling mistakes in the examples.

@item
Peter Wang bumped the version to 4.9.2.

@item
Peter Wang moved allegro/branches/4.3 to allegro/branches/4.9.

@item
Ryan Patterson clarified the documentation of stop_sample().

@item
Peter Wang and Trent Gamblin fixed some issues with the CMake build. The allegro-config script was not generated properly and liballeg_unsharable wasn't being installed.

@item
Matthew Leverton changed an instance of long long to LONG_LONG and an LL suffix into a (LONG_LONG) cast@comma{} both for MSVC 6.

@item
Matthew Leverton submitted a fix for MSVC 6 regarding MSVC's lack of a __FUNCTION__ macro.

@item
orz@comma{} Matthew Leverton@comma{} and Peter Wang made the ALLEGRO_USE_C=1 option to work under MinGW and MSVC.

@item
Anthony Cassidy fixed a typo.

@item
Peter Wang removed the 'msvc' target from the fix.sh help message as it should not be used by users any more. Added a comment that it is used by zipup.sh.

@item
Anthony 'Timorg' Cassidy made d_menu_proc fill up its assigned area with the gui_bg_color.

@end itemize

@node Changes from 490 to 491 March 2007
@chapter Changes from 4.9.0 to 4.9.1 (March 2007)
@emph{Note that 4.9.1 was called 4.3.1 when it was originally released.}

@itemize
@item
Added a new mouse and cursor API. The new functions are:

al_install_mouse@comma{} al_uninstall_mouse@comma{} al_get_mouse@comma{} al_get_mouse_num_buttons@comma{} al_get_mouse_num_axes@comma{} al_set_mouse_xy@comma{} al_set_mouse_z@comma{} al_set_mouse_w@comma{} al_set_mouse_axis@comma{} al_set_mouse_range@comma{} al_get_mouse_state@comma{} al_mouse_button_down@comma{} al_mouse_state_axis

al_create_mouse_cursor@comma{} al_destroy_mouse_cursor@comma{} al_set_mouse_cursor@comma{} al_set_system_mouse_cursor@comma{} al_show_mouse_cursor@comma{} al_hide_mouse_cursor

@item
Added documentation for some parts of the 4.9 API using the NaturalDocs generation system. The documentation is nowhere near as good as a proper manual@comma{} but it's still better than nothing.

@item
Added a commented example demonstating the new API (exnew_events.c).

@item
Added CMake and SCons build systems. These are mainly for use by Allegro developers at present.

@item
Various bug fixes and minor changes.

@end itemize

@node Changes from 42 series to 490 July 2006
@chapter Changes from 4.2 series to 4.9.0 (July 2006)
@emph{Note that 4.9.0 was called 4.3.0 when it was originally released.}

Basically we're just wrapping up what we have in version control up to now. See the commit logs if you want details.

This release introduces a few new subsystems. We have an event system@comma{} a new keyboard API@comma{} a new joystick API@comma{} a new timer API@comma{} and the start of a new graphics API. All of these are subject to change@comma{} as is usual for a WIP.

We are maintaining a certain level of source compatibility with the 4.2 API. If it's easy to maintain compatibility then we do it@comma{} otherwise compatibility is dropped. Obscure features are more likely to be dropped.

This release has had minimal testing on Linux/x86@comma{} Windows/x86 (MinGW) and Windows/x86 (MSVC). It seems to work on some Linux/x86-64 machines also. Other ports are broken or untested.

The new functions are as follows (in no particular order). No real documentation exists at the moment but interesting header files are: altime.h@comma{} display.h@comma{} draw.h@comma{} events.h@comma{} joystick.h@comma{} keyboard.h@comma{} timer.h.

@itemize
@item
al_current_time al_rest

@item
al_create_video_bitmap al_create_system_bitmap al_scroll_display al_request_scroll al_poll_scroll al_show_video_bitmap al_request_video_bitmap al_enable_triple_buffer al_create_display al_set_update_method al_destroy_display al_flip_display al_get_buffer al_get_update_method al_enable_vsync al_disable_vsync al_toggle_vsync al_vsync_is_enabled al_blit al_blit_region al_blit_scaled

@item
al_event_source_set_mask al_event_source_mask

@item
al_create_event_queue al_destroy_event_queue al_register_event_source al_unregister_event_source al_event_queue_is_empty al_get_next_event al_peek_next_event al_drop_next_event al_flush_event_queue al_wait_for_event al_wait_for_specific_event

@item
al_install_joystick al_uninstall_joystick al_num_joysticks al_get_joystick al_release_joystick al_joystick_name al_joystick_num_sticks al_joystick_stick_flags al_joystick_stick_name al_joystick_num_axes al_joystick_axis_name al_joystick_button_name al_get_joystick_state

@item
al_install_keyboard al_uninstall_keyboard al_get_keyboard al_set_keyboard_leds al_keycode_to_name al_get_keyboard_state al_key_down

@item
al_install_timer al_uninstall_timer al_start_timer al_stop_timer al_timer_is_started al_timer_get_speed al_timer_set_speed al_timer_get_count al_timer_set_count

@end itemize

@bye
